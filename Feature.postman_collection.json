{
	"info": {
		"_postman_id": "3c1a3d53-859e-4b2d-94ab-6a04dca1673b",
		"name": "Feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26302235"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Config",
					"item": [
						{
							"name": "Login User Mari",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"tokenUserMari\", pm.variables.replaceIn(JSON.parse(responseBody).token));\r",
											"pm.environment.set(\"idUserMari\", pm.variables.replaceIn(JSON.parse(responseBody).user._id));\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is token exist\", function(){\r",
											"    pm.expect(JSON.parse(responseBody).token).to.exist;\r",
											"});\r",
											"pm.test(\"Check is accessProfile true\", function(){\r",
											"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(JSON.parse(responseBody).user.accessProfile);\r",
											"});\r",
											"pm.test(\"Check the success message\", function (){\r",
											"    pm.expect(\"Olá Mariana Nogueira, autenticação autorizada com sucesso!\").to.eql(pm.response.json().msg);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function MailMari(){\r",
											"\r",
											"    var MailMari = [\"marianaqa@gmail.com\"];\r",
											"    var randomItem = MailMari[Math.floor(Math.random() * MailMari.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function PasswordMari(){\r",
											"\r",
											"    var PasswordMari = [\"Marianaqa14@#\"];\r",
											"    var randomItem = PasswordMari[Math.floor(Math.random() * PasswordMari.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"MailMari\", MailMari());\r",
											"\r",
											"pm.environment.set(\"PasswordMari\", PasswordMari());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"{{MailMari}}\",\r\n  \"password\": \"{{PasswordMari}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/login/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Users - Caminho Feliz",
			"item": [
				{
					"name": "Register Users",
					"item": [
						{
							"name": "Register User Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"idUser\", pm.variables.replaceIn(JSON.parse(responseBody).user._id));\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check the success message\", function (){\r",
											"    pm.expect(`Olá ${pm.environment.get(\"FullName\")} cadastro realizado com sucesso.`).to.eql(pm.response.json().msg);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is fullName true\", function(){\r",
											"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is mail true\", function(){\r",
											"    pm.expect(pm.environment.get(\"Mail\")).to.eql(JSON.parse(responseBody).user.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is accessProfile true\", function(){\r",
											"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(JSON.parse(responseBody).user.accessProfile);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is CPF true\", function(){\r",
											"    pm.expect(pm.environment.get(\"cpf\")).to.eql(JSON.parse(responseBody).user.cpf);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \"+ lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set(\"cpf\", cpf());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login User",
					"item": [
						{
							"name": "Login User Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"tokenUser\", pm.variables.replaceIn(JSON.parse(responseBody).token));\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is token exist\", function(){\r",
											"    pm.expect(JSON.parse(responseBody).token).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Check is fullName true\", function(){\r",
											"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is mail true\", function(){\r",
											"    pm.expect(pm.environment.get(\"Mail\")).to.eql(JSON.parse(responseBody).user.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is accessProfile true\", function(){\r",
											"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(JSON.parse(responseBody).user.accessProfile);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is CPF true\", function(){\r",
											"    pm.expect(pm.environment.get(\"cpf\")).to.eql(JSON.parse(responseBody).user.cpf);\r",
											"});\r",
											"\r",
											"pm.test(\"Check the success message\", function (){\r",
											"    pm.expect(`Olá ${pm.environment.get(\"FullName\")}, autenticação autorizada com sucesso!`).to.eql(pm.response.json().msg);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/login/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List/Count Users",
					"item": [
						{
							"name": "List User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Count User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/user/count",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										"count"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update User",
					"item": [
						{
							"name": "Update Email é alfanumérico",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"pm.test('Check the success message', function () {\r",
											"    pm.expect('Dados atualizados com sucesso!').to.eql(pm.response.json().msg);\r",
											"})\r",
											"\r",
											"var responseBody = pm.response.json();\r",
											"\r",
											"var mail = responseBody.mail;\r",
											"\r",
											"function isAlphanumeric(str) {\r",
											"    var alphanumericRegex = /^[a-zA-Z0-9]+$/;\r",
											"    return alphanumericRegex.test(str);\r",
											"}\r",
											"\r",
											"pm.test('Campo Email é alfanumérico', function () {\r",
											"    pm.expect(isAlphanumeric(mail)).to.be.true;\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flavia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Leticia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloisa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauan\",\"Jaqueline\",\"Isaac\",\"Caio\",\"Mariele\",\"Vinicius\",\"Melissa\",\"Benjamin\",\"Marina\",\"Clara\",\"Lucca\",\"Cecilia\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavinia\",\"Antonio\",\"Vitoria\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alicia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otavio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antonia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Reis\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"12@gmail.com\",\"12@hotmail.com\",\"12@yahoo.com\",\"12@outlook.com\",\"13@aol.com\",\"13@icloud.com\",\"13@protonmail.com\",\"14@gmx.com\",\"15@mail.com\",\"1@zoho.com\",\"2@yandex.com\",\"3@live.com\",\"4@rocketmail.com\",\"1@fastmail.com\",\"1@tutanota.com\",\"1@inbox.com\",\"1@me.com\",\"23@rediffmail.com\",\"2@sbcglobal.net\",\"2@cox.net\",\"2@yahoo.co.uk\",\"3@att.net\",\"3@mail.ru\",\"3@optonline.net\",\"3@ymail.com\",\"3@outlook.com.br\",\"3@live.com.mx\",\"3@gmx.de\",\"3@web.de\",\"3@yahoo.com.br\",\"4@yandex.ru\",\"4@hotmail.fr\",\"4@hotmail.co.uk\",\"2@yahoo.fr\",\"3@outlook.es\",\"3@mail.ru\",\"3@orange.fr\",\"3@libero.it\",\"3@hotmail.it\",\"3@yahoo.it\",\"3@o2.pl\",\"4@wp.pl\",\"4@interia.pl\",\"4@onet.pl\",\"4@seznam.cz\",\"4@abv.bg\",\"4@gmx.at\",\"4@gmx.ch\",\"4@bluewin.ch\",\"3@inbox.lv\",\"4@rambler.ru\",\"4@mail.bg\",\"4@yahoo.ca\",\"4@hotmail.ca\",\"4@bell.net\",\"4@hotmail.com.au\",\"4@yahoo.com.au\",\"4@t-online.de\",\"4@arcor.de\",\"1@cox.net\",\"1@verizon.net\",\"1@yahoo.de\",\"2@hotmail.de\",\"2@wanadoo.fr\",\"2@live.fr\",\"2@gmx.fr\",\"3@mail.be\",\"3@telenet.be\",\"3@hotmail.be\",\"3@yahoo.co.in\",\"4@live.in\",\"4@rediffmail.com\",\"4@hotmail.in\",\"2@indiatimes.com\",\"2@yahoo.co.id\",\"2@hotmail.co.id\",\"2@yahoo.com.sg\",\"2@outlook.sg\",\"2@hotmail.com.sg\",\"2@yahoo.com.ph\",\"2@yahoo.com.vn\",\"2@yahoo.com.ar\",\"2@yahoo.com.mx\",\"2@yahoo.com.co\",\"2@yahoo.com.pe\", \"1@yahoo.com.ve\",\"1@yahoo.com.ec\",\"1@yahoo.com.bo\",\"1@yahoo.com.gt\",\"2@yahoo.com.do\",\"2@yahoo.com.pa\",\"2@yahoo.com.hk\",\"3@yahoo.com.tw\",\"3@yahoo.com.cn\",\"3@yahoo.co.jp\",\"3@yahoo.co.kr\",\"3@yahoo.co.th\",\"3@yahoo.com.my\",\"3@yahoo.com.sa\",\"3@yahoo.ae\",\"@yahoo.co.il\",\"3@yahoo.com.tr\",\"3@yahoo.com.eg\",\"3@yahoo.com.ng\",\"3@yahoo.co.za\",\"1@yahoo.com.au\",\"1@yahoo.com.nz\",\"1@yahoo.com.ph\",\"1@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"pm.environment.set(\"FullName\", firstName() +\" \"+ lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/{{idUser}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										"{{idUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Password Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg: Senha atualizada com sucesso!\", function (){\r",
											"    pm.expect(pm.response.json().msg).to.eql(\"Senha atualizada com sucesso!\");\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"pm.environment.set(\"Password\", gerarSenha());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"{{Password}}\",\r\n    \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/password/{{idUser}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										"password",
										"{{idUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Dados atualizados com sucesso!\", function (){\r",
											"    pm.expect(pm.response.json().msg).to.eql(\"Dados atualizados com sucesso!\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Maria Braga\",\r\n  \"mail\": \"{{Mail}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/{{idUser}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										"{{idUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Status Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Status do usuario atualizado com sucesso para status true.\", function (){\r",
											"    pm.expect(pm.response.json().msg).to.eql(\"Status do usuario atualizado com sucesso para status true.\");\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": true\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/status/{{idUser}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										"status",
										"{{idUser}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete User",
					"item": [
						{
							"name": "Delete User Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"pm.test('Objeto excluído não existe mais', function () {\r",
											"    pm.sendRequest({\r",
											"        url: 'https://esquadrao-classe-a.qacoders-academy.com.br/api/user/service/admin/ + {{idUser}}',\r",
											"        method: 'GET'\r",
											"    }, function (_err, _res) {\r",
											"        pm.expect(_res).to.have.status(403);\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg: Usuário deletado com sucesso!\", function () {\r",
											"    pm.expect(pm.response.json().msg).to.eql(pm.globals.get(\"MsgUserDeleteSucess\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/user/{{idUser}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										"{{idUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User Sucess Confirm",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"pm.test('Objeto excluído não existe mais', function () {\r",
											"    pm.sendRequest({\r",
											"        url: 'https://esquadrao-classe-a.qacoders-academy.com.br/api/user/service/admin/ + {{idUser}}',\r",
											"        method: 'GET'\r",
											"    }, function (_err, _res) {\r",
											"        pm.expect(_res).to.have.status(403);\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg: Esse usuário não existe em nossa base de dados.\", function () {\r",
											"    pm.expect(pm.response.json().alert[0]).to.eql(pm.globals.get(\"MsgUserDeleteConfirm\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/user/{{idUser}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										"{{idUser}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Users - Falso Positivo",
			"item": [
				{
					"name": "Register User",
					"item": [
						{
							"name": "Register User sucess 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"idUser\", pm.variables.replaceIn(JSON.parse(responseBody).user._id));\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check the success message\", function (){\r",
											"    pm.expect(`Olá ${pm.environment.get(\"FullName\")} cadastro realizado com sucesso.`).to.eql(pm.response.json().msg);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is fullName true\", function(){\r",
											"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is mail true\", function(){\r",
											"    pm.expect(pm.environment.get(\"Mail\")).to.eql(JSON.parse(responseBody).user.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is accessProfile true\", function(){\r",
											"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(JSON.parse(responseBody).user.accessProfile);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is CPF true\", function(){\r",
											"    pm.expect(pm.environment.get(\"cpf\")).to.eql(JSON.parse(responseBody).user.cpf);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"pm.environment.set(\"FullName\", firstName() +\" \"+ lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set(\"cpf\", cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register FullName em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 1000ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"})\r",
											"\r",
											"var responseBody = pm.response.json();\r",
											"\r",
											"pm.test(\"Check msg: O campo nome completo é obrigatório.\", function (){\r",
											"    pm.expect(pm.globals.get(\"MsgFullNameRequired\")).to.eql(responseBody.error[0]);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"\",\r\n  \"mail\": \"test@test.com\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register FullName fora do formato",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is mail true\", function(){\r",
											"    pm.expect(pm.environment.get(\"Mail\")).to.eql(JSON.parse(responseBody).user.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is accessProfile true\", function(){\r",
											"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(JSON.parse(responseBody).user.accessProfile);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is CPF true\", function(){\r",
											"    pm.expect(pm.environment.get(\"cpf\")).to.eql(JSON.parse(responseBody).user.cpf);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"E S\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Apenas FirstName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Mariana\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register FullName com caracteres especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 900ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Mariana N @#\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register FirstName ou LastName com letra minúscula",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"mariana N\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register FirstName ou LastName com letra minúscula 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Mariana nogueira\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register FirstName ou LastName com letra minúscula 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"mariana nogueira\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Email obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo e-mail é obrigatório.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailRequired\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Email sem @",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailIncorrect\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"marianaqagmail.com\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Email com espaço",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailIncorrect\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"mariana @qagmail.com\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Password obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Campo senha é obrigatório\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgPasswordRequired\"));\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Password abaixo de 8 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"AaBb1#\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"AaBb1#\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Password acima de 12 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"AaBb123456#@&aabb\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"AaBb123456#@&aabb\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register ConfirmPassword obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo de confirmação de senha não pode ficar vazio.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgConfirmPasswordRequired\"));\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register AcessProfile obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo perfil de acesso é obrigatório.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgAcessProfileRequired\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register CPF obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo CPF é obrigatório!\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgCPFRequired\"));\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register User já cadastrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 409', function () {\r",
											"    pm.response.to.have.status(409);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 500ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg: O cpf informado já existe em nossa base de dados.\", function (){\r",
											"    pm.expect(pm.response.json().alert[0]).to.eql(pm.globals.get(\"MsgRegisteredUser\"));\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domain(){\r",
											"\r",
											"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"//Função para gerar senha aletória\r",
											"function gerarSenha() {\r",
											"const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"const comprimentoMinimo = 8;\r",
											"const comprimentoMaximo = 12;\r",
											"\r",
											"let senhaArray = [];\r",
											"\r",
											"//Garante pelo menos um caractere maiusculo, minusculo, numero e especial\r",
											"\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); //Caractere maiusculo\r",
											"senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); //Caractere minusculo\r",
											"senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); //Numero\r",
											"senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); //Caractere especial\r",
											"\r",
											"const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"for(let i = 0; i < comprimentoRestante; i++) {\r",
											"senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"}\r",
											"\r",
											"return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"//Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"function cpf() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(9).fill('').map(() => rnd(9));\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"  \r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function mail(){\r",
											"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mail = user+pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullName\", firstName() +\" \" + lastName());\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"pm.environment.set(\"Mail\", mail());\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											"pm.environment.set('cpf', cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Augusto Azevedo\",\r\n  \"mail\": \"augustoazevedo@web.de\",\r\n  \"password\": \"F9Gi$BARiNoK\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": 45177867145,\r\n  \"confirmPassword\": \"F9Gi$BARiNoK\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register User FullName acima de 100 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"// Extrai o valor do campo fullName da resposta JSON\r",
											"var fullName = pm.response.json().error[0];\r",
											"\r",
											"// Verifica se o comprimento do fullName é maior que 100 caracteres\r",
											"pm.test(\"Verificar comprimento do fullName\", function () {\r",
											"    pm.expect(fullName.length).to.be.below(100);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O nome completo deve ter no máximo 100 caracteres.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameOver100\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa Silva Santos Ole\",\r\n  \"mail\": \"mariaqa@gmail.com\",\r\n  \"password\": \"Mariaqa14@#\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"12345678720\",\r\n  \"confirmPassword\": \"Mariaqa14@#\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/user/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login User",
					"item": [
						{
							"name": "Login - email e senha inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Os dados informados são inválidos\", function (){\r",
											"    pm.expect(pm.response.json().alert[0]).to.eql(pm.globals.get(\"MsgLoginInvalid\"));\r",
											"})\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"email123@hotmail.com\",\r\n  \"password\": \"1234@Teste\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/login/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - email inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Os dados informados são inválidos\", function (){\r",
											"    pm.expect(pm.response.json().alert[0]).to.eql(pm.globals.get(\"MsgLoginInvalid\"));\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"email123@hotmail.com\",\r\n  \"password\": \"{{Password}}\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/login/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - senha inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Os dados informados são inválidos\", function (){\r",
											"    pm.expect(pm.response.json().alert[0]).to.eql(pm.globals.get(\"MsgLoginInvalid\"));\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"123%@Teste\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/login/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - email obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Os dados informados são inválidos\", function (){\r",
											"    pm.expect(pm.response.json().alert[0]).to.eql(pm.globals.get(\"MsgLoginInvalid\"));\r",
											"})\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"\",\r\n  \"password\": \"{{Password}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/login/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - senha obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Os dados informados são inválidos\", function (){\r",
											"    pm.expect(pm.response.json().alert[0]).to.eql(pm.globals.get(\"MsgLoginInvalid\"));\r",
											"})\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/login/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update User",
					"item": [
						{
							"name": "User",
							"item": [
								{
									"name": "Update FullName obrigatório",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"var responseBody = pm.response.json();\r",
													"\r",
													"pm.test(\"Check msg: O campo nome completo é obrigatório.\", function (){\r",
													"    pm.expect(pm.globals.get(\"MsgFullNameRequired\")).to.eql(responseBody.error[0]);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\": \"\",\r\n    \"mail\": \"{{Mail}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FullName com acento no nome ou sobrenome",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\": \"Vinícius Moraes\",\r\n    \"mail\": \"{{Mail}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FullName com acento no nome ou sobrenome 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\": \"Vilma Araújo\",\r\n    \"mail\": \"{{Mail}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FullName acima de 100 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"\r",
													"// Extrai o valor do campo fullName da resposta JSON\r",
													"var fullName = pm.response.json().error[0];\r",
													"\r",
													"// Verifica se o comprimento do fullName é maior que 100 caracteres\r",
													"pm.test(\"Verificar comprimento do fullName\", function () {\r",
													"    pm.expect(fullName.length).to.be.below(100);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: O nome completo deve ter no máximo 100 caracteres.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameOver100\"));\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"Maria Joana Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa Silva Santos Ole\",\r\n  \"mail\": \"{{Mail}}\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FullName fora do formato",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function firstName(){\r",
													"\r",
													"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
													"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
													"\r",
													"    return randomItem;\r",
													"}\r",
													"\r",
													"function lastName(){\r",
													"\r",
													"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
													"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
													"\r",
													"    return randomItem;\r",
													"}\r",
													"function domain(){\r",
													"\r",
													"    var domain = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
													"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
													"\r",
													"    return randomItem;\r",
													"}\r",
													"\r",
													"pm.environment.set(\"Domain\", domain());\r",
													"\r",
													"function mail(){\r",
													"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
													"    var mail = user+pm.variables.get(\"Domain\");\r",
													"    return mail;\r",
													"}\r",
													"\r",
													"pm.environment.set(\"Domain\", domain());\r",
													"pm.environment.set(\"Mail\", mail());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\": \"E S\",\r\n    \"mail\": \"emanuelsantos2@gmail.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FullName com números",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\": \"Emanuelly Souza 12\",\r\n    \"mail\": \"{{Mail}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FullName com caracteres especiais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\": \"Emanuelly Souza @#\",\r\n    \"mail\": \"{{Mail}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Apenas FirstName",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"Emanuelly\",\r\n  \"mail\": \"{{Mail}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FirstName ou LastName com letra minúscula",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"emanuelly souza\",\r\n  \"mail\": \"{{Mail}}\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FirstName ou LastName com letra minúscula 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"emanuelly Souza\",\r\n  \"mail\": \"{{Mail}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update FirstName ou LastName com letra minúscula 3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Informe o nome e sobrenome com as iniciais em letra maiúscula.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgFullNameIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"Emanuelly souza\",\r\n  \"mail\": \"{{Mail}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Email obrigatório",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: O campo e-mail é obrigatório.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailRequired\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Email com espaço",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"emanuellysouza @hotmail.it\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Email sem @",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"emanuellysouzahotmail.it\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"{{idUser}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Password",
							"item": [
								{
									"name": "Update Password obrigatório",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Campo senha é obrigatório\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgPasswordRequired\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"\",\r\n    \"confirmPassword\": \"1A@bbb224\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update ConfirmPassword obrigatório",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg:  campo de confirmação de senha não pode ficar vazio.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgConfirmPasswordRequired\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"1A@bbb224\",\r\n    \"confirmPassword\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password acima de 12 caracteres (está considerando os 16 caracteres)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"A@bbb2244xxaaCVBc\",\r\n    \"confirmPassword\": \"A@bbb2244xxaaCVBc\"\r\n\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password abaixo de 8 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\", function (){\r",
													"    pm.expect(pm.response.json().error[1]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"1A2@b24\",\r\n    \"confirmPassword\": \"1A2@b24\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password letras maiúsculas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\", function (){\r",
													"    pm.expect(pm.response.json().error[1]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"AAAABBBBCCCC\",\r\n    \"confirmPassword\": \"AAAABBBBCCCC\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password apenas letras minúsculas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 1000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\", function (){\r",
													"    pm.expect(pm.response.json().error[1]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"aaabbbcccc\",\r\n    \"confirmPassword\": \"aaabbbcccc\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password apenas letras",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\", function (){\r",
													"    pm.expect(pm.response.json().error[1]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"AAAabbbCCc\",\r\n    \"confirmPassword\": \"AAAabbbCCc\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password apenas números",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\", function (){\r",
													"    pm.expect(pm.response.json().error[1]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"11122233344\",\r\n    \"confirmPassword\": \"11122233344\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password apenas caracteres especiais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\", function (){\r",
													"    pm.expect(pm.response.json().error[1]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"@@@###$$\",\r\n    \"confirmPassword\": \"@@@###$$\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password diferente do ConfirmPassword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 1000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: As senhas não coincidem.\", function (){\r",
													"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgPasswordError\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"1A@bbb334\",\r\n    \"confirmPassword\": \"1A@b24\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Password diferente do ConfirmPassword e fora do formato",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 900ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
													"});\r",
													"\r",
													"pm.test(\"Check msg: Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\", function (){\r",
													"    pm.expect(pm.response.json().error[1]).to.eql(pm.globals.get(\"MsgPasswordIncorrect\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{tokenUserMari}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "token",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"1A@b5c\",\r\n    \"confirmPassword\": \"1A@4dc\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Url}}/api/user/password/{{idUser}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"user",
												"password",
												"{{idUser}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Delete User",
					"item": []
				}
			]
		},
		{
			"name": "Company - Caminho Feliz",
			"item": [
				{
					"name": "Register Company",
					"item": [
						{
							"name": "Company Register Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Obtém o ID diretamente do corpo de resposta\r",
											"var companyId = pm.response.json().newCompany._id;\r",
											"\r",
											"// Define a variável de ambiente com o ID\r",
											"pm.environment.set(\"idCompany\", companyId);\r",
											"\r",
											"pm.test(\"Response status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is corporateName true\", function(){\r",
											"    pm.expect(pm.environment.get(\"CorporateName\")).to.eql(JSON.parse(responseBody).newCompany.corporateName);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is registerCompany true\", function(){\r",
											"    pm.expect(pm.environment.get(\"registerCompany\")).to.eql(JSON.parse(responseBody).newCompany.registerCompany);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is mailCompany true\", function(){\r",
											"    pm.expect(pm.environment.get(\"mailCompany\")).to.eql(JSON.parse(responseBody).newCompany.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is matriz true\", function(){\r",
											"    pm.expect(pm.environment.get(\"matrizCompany\")).to.eql(JSON.parse(responseBody).newCompany.matriz);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is responsibleContact true\", function(){\r",
											"    pm.expect(pm.environment.get(\"ResponsibleContact\")).to.eql(JSON.parse(responseBody).newCompany.responsibleContact);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is telephone true\", function(){\r",
											"    pm.expect(pm.environment.get(\"telephone\")).to.eql(JSON.parse(responseBody).newCompany.telephone);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is serviceDescription true\", function(){\r",
											"    pm.expect(pm.environment.get(\"serviceDescription\")).to.eql(JSON.parse(responseBody).newCompany.serviceDescription);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de sucesso presente\", function () {\r",
											"    pm.expect(pm.response.json().msg).to.eql(`Olá a companhia ${pm.environment.get(\"CorporateName\")} foi cadastrada com sucesso.`);\r",
											"});\r",
											"\r",
											"pm.test(\"ID da empresa presente na resposta\", function () {\r",
											"    pm.expect(pm.response.json().newCompany._id).to.exist;\r",
											"});\r",
											"pm.test(\"Dados da empresa correspondem\", function () {\r",
											"    pm.expect(pm.response.json().newCompany.corporateName).to.equal(pm.variables.get(\"CorporateName\"));\r",
											"    pm.expect(pm.response.json().newCompany.registerCompany).to.equal(pm.variables.get(\"registerCompany\"));\r",
											"    pm.expect(pm.response.json().newCompany.mail).to.equal(pm.variables.get(\"mailCompany\"));\r",
											"    pm.expect(pm.response.json().newCompany.matriz).to.equal(pm.variables.get(\"matrizCompany\"));\r",
											"    pm.expect(pm.response.json().newCompany.responsibleContact).to.equal(pm.variables.get(\"ResponsibleContact\"));\r",
											"    pm.expect(pm.response.json().newCompany.telephone).to.equal(pm.variables.get(\"telephone\"));\r",
											"    pm.expect(pm.response.json().newCompany.serviceDescription).to.equal(pm.variables.get(\"serviceDescription\"));\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function registerCompany() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"\r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function prefixes(){\r",
											"\r",
											"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
											"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function sufixes(){\r",
											"\r",
											"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
											"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function domainCompany(){\r",
											"\r",
											"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function mailCompany(){\r",
											"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
											"    return mailCompany;\r",
											"}\r",
											"function telephone() {\r",
											"  // Códigos de operadoras no Brasil\r",
											"  const operadoras = ['11', '21', '31', '41', '51'];\r",
											"\r",
											"  // Escolher aleatoriamente uma operadora\r",
											"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
											"\r",
											"  // Gerar os 8 dígitos restantes do número\r",
											"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
											"\r",
											"  // Formatar o número\r",
											"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
											"\r",
											"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
											"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
											"\r",
											"  return numeroFormatado;\r",
											"}\r",
											"\r",
											"function matrizCompany(){\r",
											"\r",
											"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
											"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function serviceDescription(){\r",
											"\r",
											"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
											"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"  // Exemplo de uso\r",
											"const numeroGerado = telephone();\r",
											"\r",
											"// Gera um número aleatório com exatamente 8 dígitos\r",
											"function CEP() {\r",
											"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
											"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
											"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
											"}\r",
											"\r",
											"function cityCompany(){\r",
											"\r",
											"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
											"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function estadoCompany(){\r",
											"\r",
											"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
											"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function bairroCompany(){\r",
											"\r",
											"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
											"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function avenida_rua(){\r",
											"\r",
											"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
											"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function nome_endereço(){\r",
											"\r",
											"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
											"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function cont_endereço(){\r",
											"\r",
											"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
											"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											" pm.environment.set(\"CEP\", CEP());\r",
											" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
											" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
											" pm.environment.set(\"cityCompany\", cityCompany());\r",
											" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
											" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
											" pm.environment.set(\"telephone\", telephone());\r",
											" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
											" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
											" pm.environment.set(\"DomainCompany\", domainCompany());\r",
											" pm.environment.set(\"mailCompany\", mailCompany());\r",
											" pm.environment.set('registerCompany', registerCompany());\r",
											" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/company/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Company",
					"item": [
						{
							"name": "Update Company Id  Status Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 900ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg: Status da companhia atualizado com sucesso.\", function (){\r",
											"    pm.expect(pm.response.json().msg).to.eql(pm.globals.get(\"MsgStatusSucess\"));\r",
											"})\r",
											"\r",
											"pm.test('ID da empresa presente na resposta', function () {\r",
											"    pm.expect(pm.response.json().updateCompany._id).to.exist;\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/company/status/{{idCompany}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"status",
										"{{idCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Company Id  Status sucess false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Status da companhia atualizado com sucesso.\", function (){\r",
											"    pm.expect(pm.response.json().msg).to.eql(pm.globals.get(\"MsgStatusSucess\"));\r",
											"})\r",
											"\r",
											"pm.test('ID da empresa presente na resposta', function () {\r",
											"    pm.expect(pm.response.json().updateCompany._id).to.exist;\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/company/status/{{idCompany}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"status",
										"{{idCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Company Id adress Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Endereço da companhia atualizado com sucesso.\", function (){\r",
											"    pm.expect(pm.response.json().msg).to.eql(pm.globals.get(\"MsgAddressUpdateSucess\"));\r",
											"})\r",
											"\r",
											"pm.test('ID da empresa presente na resposta', function () {\r",
											"    pm.expect(pm.response.json().updateCompany._id).to.exist;\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/company/address/{{idCompany}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"address",
										"{{idCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Company Id Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 900ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"})\r",
											"\r",
											"pm.test('Check msg: Companhia atualizado com sucesso.', function () {\r",
											"    pm.expect(pm.response.json().msg).to.eql(pm.globals.get(\"MsgUpdateCompanySucess\"));\r",
											"})\r",
											"\r",
											"pm.test('ID da empresa presente na resposta', function () {\r",
											"    pm.expect(pm.response.json().updatedCompany._id).to.exist;\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"Teste do Teste 7\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/company/{{idCompany}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"{{idCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update CorporateName é alfanumérico",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is corporateName true\", function(){\r",
											"    pm.expect(pm.environment.get(\"CorporateName\")).to.eql(JSON.parse(responseBody).updatedCompany.corporateName);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is mailCompany true\", function(){\r",
											"    pm.expect(pm.environment.get(\"mailCompany\")).to.eql(JSON.parse(responseBody).updatedCompany.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is matriz true\", function(){\r",
											"    pm.expect(pm.environment.get(\"matrizCompany\")).to.eql(JSON.parse(responseBody).updatedCompany.matriz);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is responsibleContact true\", function(){\r",
											"    pm.expect(pm.environment.get(\"ResponsibleContact\")).to.eql(JSON.parse(responseBody).updatedCompany.responsibleContact);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is telephone true\", function(){\r",
											"    pm.expect(pm.environment.get(\"telephone\")).to.eql(JSON.parse(responseBody).updatedCompany.telephone);\r",
											"});\r",
											"\r",
											"pm.test(\"Check is serviceDescription true\", function(){\r",
											"    pm.expect(pm.environment.get(\"telephone\")).to.eql(JSON.parse(responseBody).updatedCompany.telephone);\r",
											"});\r",
											"\r",
											"pm.test('Check msg: Companhia atualizado com sucesso.', function () {\r",
											"    pm.expect(pm.response.json().msg).to.eql(pm.globals.get('MsgUpdateCompanySucess'));\r",
											"})\r",
											"\r",
											"pm.test(\"ID da empresa presente na resposta\", function () {\r",
											"    pm.expect(pm.response.json().updatedCompany._id).to.exist;\r",
											"});\r",
											"// Extrai o corpo da resposta da solicitação\r",
											"var responseBody = pm.response.json();\r",
											"\r",
											"// Obtém o valor do campo CorporateName do corpo da resposta\r",
											"var corporateName = responseBody.CorporateName;\r",
											"\r",
											"// Função para verificar se a string é alfanumérica\r",
											"function isAlphanumeric(str) {\r",
											"    var alphanumericRegex = /^[a-zA-Z0-9]+$/;\r",
											"    return alphanumericRegex.test(str);\r",
											"}\r",
											"\r",
											"// Verifica se o campo CorporateName é alfanumérico\r",
											"pm.test(\"Campo CorporateName é alfanumérico\", function() {\r",
											"    pm.expect(isAlphanumeric(corporateName)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function registerCompany() {\r",
											"  const rnd = (n) => Math.round(Math.random() * n);\r",
											"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
											"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
											"\r",
											"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
											"  d1 = 11 - mod(d1, 11);\r",
											"  if (d1 >= 10) d1 = 0;\r",
											"\r",
											"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
											"  d2 = 11 - mod(d2, 11);\r",
											"  if (d2 >= 10) d2 = 0;\r",
											"\r",
											"  return `${n.join('')}${d1}${d2}`\r",
											"}\r",
											"\r",
											"function prefixes(){\r",
											"\r",
											"    var prefixes = ['T&ch 2', 'Glob@l 3', 'Innovative 1001!', 'Creative 100!', 'Dynamic 222*', 'Eco * & 7', 'Smart 555&', 'Alph@ 1', 'Synergetic 2@2', '12', 'Fix 0%', 'International 7&7', 'Discovery 1&1', 'Creative10000%', 'Drop& 1', 'Alternative & 2', 'echo & 10', 'tech % 6', 'global', 'innovative 100%', 'creative 99*', 'dynamic 555*', 'eco 1 &', 'smart 100%', '@lpha 0', 'synergetic0!', '!nternation@l 1', 'disc0v&ry', 'dr0p &', 'alternativ& 12'];\r",
											"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function sufixes(){\r",
											"\r",
											"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
											"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function firstName(){\r",
											"\r",
											"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function lastName(){\r",
											"\r",
											"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"function domainCompany(){\r",
											"\r",
											"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
											"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function mailCompany(){\r",
											"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
											"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
											"    return mailCompany;\r",
											"}\r",
											"function telephone() {\r",
											"  // Códigos de operadoras no Brasil\r",
											"  const operadoras = ['11', '21', '31', '41', '51'];\r",
											"\r",
											"  // Escolher aleatoriamente uma operadora\r",
											"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
											"\r",
											"  // Gerar os 8 dígitos restantes do número\r",
											"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
											"\r",
											"  // Formatar o número\r",
											"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
											"\r",
											"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
											"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
											"\r",
											"  return numeroFormatado;\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"function matrizCompany(){\r",
											"\r",
											"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
											"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function serviceDescription(){\r",
											"\r",
											"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
											"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"  // Exemplo de uso\r",
											"const numeroGerado = telephone();\r",
											"\r",
											" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
											" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
											" pm.environment.set(\"telephone\", telephone());\r",
											" pm.environment.set(\"DomainCompany\", domainCompany());\r",
											" pm.environment.set(\"mailCompany\", mailCompany());\r",
											" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
											" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
											" pm.environment.set('registerCompany', registerCompany());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"26375093780754\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/company/{{idCompany}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"{{idCompany}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Company List/Count/ID",
					"item": [
						{
							"name": "List Company Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/company/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Company Id Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Url}}/api/company/{{idCompany}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"{{idCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company Count Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/company/count",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"count"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Company",
					"item": [
						{
							"name": "Delete Company Id Sucess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 900ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"})\r",
											"\r",
											"pm.test('Objeto excluído não existe mais', function () {\r",
											"    pm.sendRequest({\r",
											"        url: 'https://esquadrao-classe-a.qacoders-academy.com.br/api/company/ + {{idCompany}}',\r",
											"        method: 'GET'\r",
											"    }, function (_err, _res) {\r",
											"        pm.expect(_res).to.have.status(403);\r",
											"    });\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg: Companhia deletado com sucesso.\", function (){\r",
											"    pm.expect(pm.response.json().msg).to.eql(pm.globals.get(\"MsgCompanyDeleteSucess\"));\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Url}}/api/company/{{idCompany}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"{{idCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Company Id Sucess Confirm",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"\r",
											"pm.test('Response time is less than 900ms', function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg: Essa companhia não existem em nossa base de dados.\", function (){\r",
											"    pm.expect(pm.response.json().msg).to.eql(pm.globals.get(\"MsgCompanyDeleteConfirm\"));\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Url}}/api/company/{{idCompany}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"company",
										"{{idCompany}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Company - Falso Positivo",
			"item": [
				{
					"name": "Register Company",
					"item": [
						{
							"name": "Company",
							"item": [
								{
									"name": "CorporateName",
									"item": [
										{
											"name": "Company Register Sucess 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Obtém o ID diretamente do corpo de resposta\r",
															"var companyId = pm.response.json().newCompany._id;\r",
															"\r",
															"// Define a variável de ambiente com o ID\r",
															"pm.environment.set(\"idCompany\", companyId);\r",
															"\r",
															"pm.test(\"Response status code is 201\", function () {\r",
															"    pm.expect(pm.response.code).to.equal(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is corporateName true\", function(){\r",
															"    pm.expect(pm.environment.get(\"CorporateName\")).to.eql(JSON.parse(responseBody).newCompany.corporateName);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is registerCompany true\", function(){\r",
															"    pm.expect(pm.environment.get(\"registerCompany\")).to.eql(JSON.parse(responseBody).newCompany.registerCompany);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is mailCompany true\", function(){\r",
															"    pm.expect(pm.environment.get(\"mailCompany\")).to.eql(JSON.parse(responseBody).newCompany.mail);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is matriz true\", function(){\r",
															"    pm.expect(pm.environment.get(\"matrizCompany\")).to.eql(JSON.parse(responseBody).newCompany.matriz);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is responsibleContact true\", function(){\r",
															"    pm.expect(pm.environment.get(\"ResponsibleContact\")).to.eql(JSON.parse(responseBody).newCompany.responsibleContact);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is telephone true\", function(){\r",
															"    pm.expect(pm.environment.get(\"telephone\")).to.eql(JSON.parse(responseBody).newCompany.telephone);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is serviceDescription true\", function(){\r",
															"    pm.expect(pm.environment.get(\"serviceDescription\")).to.eql(JSON.parse(responseBody).newCompany.serviceDescription);\r",
															"});\r",
															"\r",
															"pm.test(\"Mensagem de sucesso presente\", function () {\r",
															"    pm.expect(pm.response.json().msg).to.eql(`Olá a companhia ${pm.environment.get(\"CorporateName\")} foi cadastrada com sucesso.`);\r",
															"});\r",
															"pm.test(\"ID da empresa presente na resposta\", function () {\r",
															"    pm.expect(pm.response.json().newCompany._id).to.exist;\r",
															"});\r",
															"pm.test(\"Dados da empresa correspondem\", function () {\r",
															"    pm.expect(pm.response.json().newCompany.corporateName).to.equal(pm.variables.get(\"CorporateName\"));\r",
															"    pm.expect(pm.response.json().newCompany.registerCompany).to.equal(pm.variables.get(\"registerCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.mail).to.equal(pm.variables.get(\"mailCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.matriz).to.equal(pm.variables.get(\"matrizCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.responsibleContact).to.equal(pm.variables.get(\"ResponsibleContact\"));\r",
															"    pm.expect(pm.response.json().newCompany.telephone).to.equal(pm.variables.get(\"telephone\"));\r",
															"    pm.expect(pm.response.json().newCompany.serviceDescription).to.equal(pm.variables.get(\"serviceDescription\"));\r",
															"    // Adicione mais verificações conforme necessário\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register corporateName é obrigatório 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'Nome da empresa' é obrigatório.\", function (){\r",
															"pm.expect(pm.globals.get(\"MsgCorporateNameRequired\")).to.eql(JSON.parse(responseBody).error[0]);\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register corporateName com 99 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Obtém o valor do campo \"Nome da empresa\" do corpo da resposta\r",
															"var corporateName = responseBody.newCompany.corporateName;\r",
															"\r",
															"// Define o limite máximo de caracteres permitidos (100)\r",
															"var maxCharacterLimit = 100;\r",
															"\r",
															"// Adiciona um teste para verificar se o campo \"Nome da empresa\" não ultrapassa o limite de caracteres\r",
															"pm.test(\"Verifica se o campo 'Nome da empresa' não ultrapassa o limite de caracteres\", function() {\r",
															"    pm.expect(corporateName.length).to.be.at.most(maxCharacterLimit);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 1\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register corporateName com 100 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Obtém o valor do campo \"Nome da empresa\" do corpo da resposta\r",
															"var corporateName = responseBody.newCompany.corporateName;\r",
															"\r",
															"// Define o limite máximo de caracteres permitidos (100)\r",
															"var maxCharacterLimit = 100;\r",
															"\r",
															"// Adiciona um teste para verificar se o campo \"Nome da empresa\" não ultrapassa o limite de caracteres\r",
															"pm.test(\"Verifica se o campo 'Nome da empresa' não ultrapassa o limite de caracteres\", function() {\r",
															"    pm.expect(corporateName.length).to.be.at.most(maxCharacterLimit);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 10\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register corporateName com 101 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'Nome da empresa' deve ter no máximo 100 caracteres.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 101\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register CorporateName com caracteres especiais",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response status code is 201\", function () {\r",
															"    pm.expect(pm.response.code).to.equal(201);\r",
															"});\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"&cho Digit@l\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register CorporateName com duplicidade",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Mensagem de erro esperada\r",
															"var expectedErrorMessage = \"Essa companhia já está cadastrada. Verifique o nome, CNPJ e a razão social da companhia.\";\r",
															"\r",
															"// Adiciona um teste para verificar se a mensagem de erro contém a frase esperada\r",
															"pm.test(\"Verifica se a companhia já está cadastrada\", function() {\r",
															"    pm.expect(responseBody.alert).to.be.an('array');\r",
															"    pm.expect(responseBody.alert).to.include(expectedErrorMessage);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 2\",\r\n  \"registerCompany\": \"65443408426389\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register CorporateName com letras maiúsculas",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['TECH', 'GLOBAL', 'INNO', 'CREATIVE', 'DINO', 'ECO', 'SMART', 'ALPHA'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['SOLUT 10', 'TECH 1', 'ENTER 2', 'LABS 10', 'SYST 10', 'GROUP 12', 'Dynamics', 'PAY 10'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"\r",
															"}\r",
															"\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response status code is 201\", function () {\r",
															"    pm.expect(pm.response.code).to.equal(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is corporateName true\", function(){\r",
															"    pm.expect(pm.environment.get(\"CorporateName\")).to.eql(JSON.parse(responseBody).newCompany.corporateName);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is registerCompany true\", function(){\r",
															"    pm.expect(pm.environment.get(\"registerCompany\")).to.eql(JSON.parse(responseBody).newCompany.registerCompany);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is mailCompany true\", function(){\r",
															"    pm.expect(pm.environment.get(\"mailCompany\")).to.eql(JSON.parse(responseBody).newCompany.mail);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is matriz true\", function(){\r",
															"    pm.expect(pm.environment.get(\"matrizCompany\")).to.eql(JSON.parse(responseBody).newCompany.matriz);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is responsibleContact true\", function(){\r",
															"    pm.expect(pm.environment.get(\"ResponsibleContact\")).to.eql(JSON.parse(responseBody).newCompany.responsibleContact);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is telephone true\", function(){\r",
															"    pm.expect(pm.environment.get(\"telephone\")).to.eql(JSON.parse(responseBody).newCompany.telephone);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is serviceDescription true\", function(){\r",
															"    pm.expect(pm.environment.get(\"serviceDescription\")).to.eql(JSON.parse(responseBody).newCompany.serviceDescription);\r",
															"});\r",
															"\r",
															"pm.test(\"Mensagem de sucesso presente\", function () {\r",
															"    pm.expect(pm.response.json().msg).to.eql(`Olá a companhia ${pm.environment.get(\"CorporateName\")} foi cadastrada com sucesso.`);\r",
															"});\r",
															"pm.test(\"ID da empresa presente na resposta\", function () {\r",
															"    pm.expect(pm.response.json().newCompany._id).to.exist;\r",
															"});\r",
															"pm.test(\"Dados da empresa correspondem\", function () {\r",
															"    pm.expect(pm.response.json().newCompany.corporateName).to.equal(pm.variables.get(\"CorporateName\"));\r",
															"    pm.expect(pm.response.json().newCompany.registerCompany).to.equal(pm.variables.get(\"registerCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.mail).to.equal(pm.variables.get(\"mailCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.matriz).to.equal(pm.variables.get(\"matrizCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.responsibleContact).to.equal(pm.variables.get(\"ResponsibleContact\"));\r",
															"    pm.expect(pm.response.json().newCompany.telephone).to.equal(pm.variables.get(\"telephone\"));\r",
															"    pm.expect(pm.response.json().newCompany.serviceDescription).to.equal(pm.variables.get(\"serviceDescription\"));\r",
															"    // Adicione mais verificações conforme necessário\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register CorporateName com letras minúsculas",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', 'fix', 'international', 'discovery', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', 'fix', 'international', 'discovery', 'drop', 'alternative'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes())\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());\r",
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response status code is 201\", function () {\r",
															"    pm.expect(pm.response.code).to.equal(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is corporateName true\", function(){\r",
															"    pm.expect(pm.environment.get(\"CorporateName\")).to.eql(JSON.parse(responseBody).newCompany.corporateName);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is registerCompany true\", function(){\r",
															"    pm.expect(pm.environment.get(\"registerCompany\")).to.eql(JSON.parse(responseBody).newCompany.registerCompany);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is mailCompany true\", function(){\r",
															"    pm.expect(pm.environment.get(\"mailCompany\")).to.eql(JSON.parse(responseBody).newCompany.mail);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is matriz true\", function(){\r",
															"    pm.expect(pm.environment.get(\"matrizCompany\")).to.eql(JSON.parse(responseBody).newCompany.matriz);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is responsibleContact true\", function(){\r",
															"    pm.expect(pm.environment.get(\"ResponsibleContact\")).to.eql(JSON.parse(responseBody).newCompany.responsibleContact);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is telephone true\", function(){\r",
															"    pm.expect(pm.environment.get(\"telephone\")).to.eql(JSON.parse(responseBody).newCompany.telephone);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is serviceDescription true\", function(){\r",
															"    pm.expect(pm.environment.get(\"serviceDescription\")).to.eql(JSON.parse(responseBody).newCompany.serviceDescription);\r",
															"});\r",
															"\r",
															"pm.test(\"Mensagem de sucesso presente\", function () {\r",
															"    pm.expect(pm.response.json().msg).to.eql(`Olá a companhia ${pm.environment.get(\"CorporateName\")} foi cadastrada com sucesso.`);\r",
															"});\r",
															"pm.test(\"ID da empresa presente na resposta\", function () {\r",
															"    pm.expect(pm.response.json().newCompany._id).to.exist;\r",
															"});\r",
															"pm.test(\"Dados da empresa correspondem\", function () {\r",
															"    pm.expect(pm.response.json().newCompany.corporateName).to.equal(pm.variables.get(\"CorporateName\"));\r",
															"    pm.expect(pm.response.json().newCompany.registerCompany).to.equal(pm.variables.get(\"registerCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.mail).to.equal(pm.variables.get(\"mailCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.matriz).to.equal(pm.variables.get(\"matrizCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.responsibleContact).to.equal(pm.variables.get(\"ResponsibleContact\"));\r",
															"    pm.expect(pm.response.json().newCompany.telephone).to.equal(pm.variables.get(\"telephone\"));\r",
															"    pm.expect(pm.response.json().newCompany.serviceDescription).to.equal(pm.variables.get(\"serviceDescription\"));\r",
															"    // Adicione mais verificações conforme necessário\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register corporateName é alfanumérico",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes())\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response status code is 201\", function () {\r",
															"    pm.expect(pm.response.code).to.equal(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is corporateName true\", function(){\r",
															"    pm.expect(pm.environment.get(\"CorporateName\")).to.eql(JSON.parse(responseBody).newCompany.corporateName);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is registerCompany true\", function(){\r",
															"    pm.expect(pm.environment.get(\"registerCompany\")).to.eql(JSON.parse(responseBody).newCompany.registerCompany);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is mailCompany true\", function(){\r",
															"    pm.expect(pm.environment.get(\"mailCompany\")).to.eql(JSON.parse(responseBody).newCompany.mail);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is matriz true\", function(){\r",
															"    pm.expect(pm.environment.get(\"matrizCompany\")).to.eql(JSON.parse(responseBody).newCompany.matriz);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is responsibleContact true\", function(){\r",
															"    pm.expect(pm.environment.get(\"ResponsibleContact\")).to.eql(JSON.parse(responseBody).newCompany.responsibleContact);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is telephone true\", function(){\r",
															"    pm.expect(pm.environment.get(\"telephone\")).to.eql(JSON.parse(responseBody).newCompany.telephone);\r",
															"});\r",
															"\r",
															"pm.test(\"Check is serviceDescription true\", function(){\r",
															"    pm.expect(pm.environment.get(\"telephone\")).to.eql(JSON.parse(responseBody).newCompany.telephone);\r",
															"});\r",
															"\r",
															"pm.test(\"Mensagem de sucesso presente\", function () {\r",
															"    pm.expect(pm.response.json().msg).to.eql(`Olá a companhia ${pm.environment.get(\"CorporateName\")} foi cadastrada com sucesso.`);\r",
															"});\r",
															"pm.test(\"ID da empresa presente na resposta\", function () {\r",
															"    pm.expect(pm.response.json().newCompany._id).to.exist;\r",
															"});\r",
															"pm.test(\"Dados da empresa correspondem\", function () {\r",
															"    pm.expect(pm.response.json().newCompany.corporateName).to.equal(pm.variables.get(\"CorporateName\"));\r",
															"    pm.expect(pm.response.json().newCompany.registerCompany).to.equal(pm.variables.get(\"registerCompany\"));\r",
															"    pm.expect(pm.response.json().newCompany.mail).to.equal(pm.variables.get(\"mailCompany\"));\r",
															"    // Adicione mais verificações conforme necessário\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Obtém o valor do campo CorporateName do corpo da resposta\r",
															"var corporateName = responseBody.CorporateName;\r",
															"\r",
															"// Função para verificar se a string é alfanumérica\r",
															"function isAlphanumeric(str) {\r",
															"    var alphanumericRegex = /^[a-zA-Z0-9]+$/;\r",
															"    return alphanumericRegex.test(str);\r",
															"}\r",
															"\r",
															"// Verifica se o campo CorporateName é alfanumérico\r",
															"pm.test(\"Campo CorporateName é alfanumérico\", function() {\r",
															"    pm.expect(isAlphanumeric(corporateName)).to.be.true;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "RegisterCompany (CNPJ)",
									"item": [
										{
											"name": "Company Register - registerCompany (CNPJ) é obrigatório",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'CNPJ' da empresa é obrigatório.\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgCNPJRequired\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register - registerCompany (CNPJ) com letras",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'CNPJ' da empresa deve conter apenas números.\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgCNPJIncorrect\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"aabbC124586790\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register - registerCompany (CNPJ) com caracteres especiais",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'CNPJ' da empresa deve conter apenas números.\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgCNPJIncorrect\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"@#$%&124586790\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register - registerCompany (CNPJ) 13 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgCNPJ14\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"8859672643698\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register - registerCompany (CNPJ) com 15 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgCNPJ14\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"8859672643698753\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register (CNPJ) não permite duplicidade",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Mensagem de erro esperada\r",
															"var expectedErrorMessage = \"Essa companhia já está cadastrada. Verifique o nome, CNPJ e a razão social da companhia.\";\r",
															"\r",
															"// Adiciona um teste para verificar se a mensagem de erro contém a frase esperada\r",
															"pm.test(\"Verifica se a companhia já está cadastrada\", function() {\r",
															"    pm.expect(responseBody.alert).to.be.an('array');\r",
															"    pm.expect(responseBody.alert).to.include(expectedErrorMessage);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"CorporateName\", prefixes()+\" \" + sufixes())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register (CNPJ) não permite duplicidade 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: Essa companhia já está cadastrada. Verifique o nome, CNPJ e a razão social da companhia.\", function (){\r",
															"    pm.expect(pm.response.json().alert[0]).to.eql(pm.globals.get(\"MsgCNPJDuplicate\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"CorporateName\", prefixes()+\" \" + sufixes())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "MailCompany",
									"item": [
										{
											"name": "Company Register Mail é obrigatório",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'Email' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Mail é obrigatório 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'Email' é obrigatório.\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailCompanyRequired\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Mail sem o .com REVISAR",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test@test\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Mail sem o @",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailCompanyIncorrect\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"testtest.com\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Mail com espaço entre o dominio",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailCompanyIncorrect\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test @test.com\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Mail com caracteres especiais",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 201', function () {\r",
															"    pm.response.to.have.status(201);\r",
															"})\r",
															"\r",
															"pm.test('Response time is less than 900ms', function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"t&st@test.com\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Mail sem o domínio",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgMailCompanyIncorrect\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test@.com\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ResponsibleContact",
									"item": [
										{
											"name": "Company Register responsibleContact é obrigatório",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'Contado do Responsável' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact é obrigatório 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'Contado do Responsável' é obrigatório.\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgResponsibleRequired\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact com 100 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Obtém o valor do campo \"Nome da empresa\" do corpo da resposta\r",
															"var responsibleContact = responseBody.newCompany.responsibleContact;\r",
															"\r",
															"// Define o limite máximo de caracteres permitidos (100)\r",
															"var maxCharacterLimit = 100;\r",
															"\r",
															"// Adiciona um teste para verificar se o campo \"Nome da empresa\" não ultrapassa o limite de caracteres\r",
															"pm.test(\"Verifica se o campo 'Nome do responsável' não ultrapassa o limite de caracteres\", function() {\r",
															"    pm.expect(responsibleContact.length).to.be.at.most(maxCharacterLimit);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa Silva Santos Ol\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact com 99 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Obtém o valor do campo \"Nome da empresa\" do corpo da resposta\r",
															"var responsibleContact = responseBody.newCompany.responsibleContact;\r",
															"\r",
															"// Define o limite máximo de caracteres permitidos (100)\r",
															"var maxCharacterLimit = 100;\r",
															"\r",
															"// Adiciona um teste para verificar se o campo \"Nome da empresa\" não ultrapassa o limite de caracteres\r",
															"pm.test(\"Verifica se o campo 'Nome do responsável' não ultrapassa o limite de caracteres\", function() {\r",
															"    pm.expect(responsibleContact.length).to.be.at.most(maxCharacterLimit);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa Silva Santos O\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact com 101 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'Contado do Responsável' deve ter no máximo 100 caracteres.\", function (){\r",
															"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgResponsibleover100\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa Silva Santos Oli\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact com números REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"Maria 12\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact com caracteres especiais REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"Maria @\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact com inicial minúscula REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"maria Sá\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact apenas inicial nome REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"M\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact Apenas nome REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"Maria\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register responsibleContact deve ter no mínimo duas palavras compostas",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"  // Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"// Gera um número aleatório com exatamente 8 dígitos\r",
															"function CEP() {\r",
															"    var min = Math.pow(10, 7); // Mínimo: 10000000\r",
															"    var max = Math.pow(10, 8) - 1; // Máximo: 99999999\r",
															"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CEP\", CEP());\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"Maria Silva\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Telephone",
									"item": [
										{
											"name": "Company Register telephone é obrigatório",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'Telefone' é obrigatório.\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"echo 212 dynamic\",\r\n  \"registerCompany\": \"12365496385273\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone com letras e caracteres especiais",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"echo 212 dynamic\",\r\n  \"registerCompany\": \"12365496385273\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"aac@#C95873645\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone com 14 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"echo 2122 dynamic\",\r\n  \"registerCompany\": {{registerCompany}},\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"61423456957698\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone com 13 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes())"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": {{registerCompany}},\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"6142345695769\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone com 12 caracteres REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes())"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": {{registerCompany}},\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"614234569576\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone com mais de 15 caracteres REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"echo 2122 dynamic\",\r\n  \"registerCompany\": {{registerCompany}},\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"4526142345695874\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone máximo de caracteres msg diferente",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"echo 2122 dynamic\",\r\n  \"registerCompany\": {{registerCompany}},\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"45261423456\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone com 20 caracteres REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": {{registerCompany}},\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"52614234569587789635\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone com mais de 20 caracteres REVISAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": {{registerCompany}},\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"526142345695877896356\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone com caracteres especiais",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes())"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"echo 212 dynamic\",\r\n  \"registerCompany\": \"12365496385273\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"@#$%95873645\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register telephone exemplo",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Matriz (Razão Social)/ServiceDescription",
									"item": [
										{
											"name": "Company Register serviceDescription é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'Descrição' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register serviceDescription com números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes 3\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register serviceDescription com caracteres especiais",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Teste$ @3\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register serviceDescription é alfanumérico",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes 123\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Matriz (Razão Social) é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Matriz (Razão Social) com números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Testes 45\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Matriz (Razão Social) é alfanumérico",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Testes 45\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Matriz (Razão Social) duplicidade",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 2\",\r\n  \"registerCompany\": \"23426456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Testes 45\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Matriz (Razaão Social) com 99 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 1\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Matriz (Razaão Social) com 100 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 10\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Matriz (Razaão Social) com 101 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															"\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 101\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Address",
							"item": [
								{
									"name": "Zipcode",
									"item": [
										{
											"name": "Company Register Zipcode obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'CEP' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"console.log(numeroGerado);\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Zipcode obrigatório 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'CEP' é obrigatório.\", function (){\r",
															"pm.expect(pm.globals.get(\"MsgZipcodeRequired\")).to.eql(JSON.parse(responseBody).error[0]);\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"console.log(numeroGerado);\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Zipcode com letras e caracteres especiais",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"pm.test(\"Check msg: O campo 'CEP' só pode conter números\", function (){\r",
															"pm.expect(pm.globals.get(\"MsgZipcodeIncorrect\")).to.eql(JSON.parse(responseBody).error[0]);\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"function matrizCompany(){\r",
															"\r",
															"    var matrizCompany = [\"Testes\", \"Consultoria\", \"Desenvolvimento\", \"TI\", \"Desenvolvimento de Software\", \"Financeiro\", \"UI/UX\"];\r",
															"    var randomItem = matrizCompany[Math.floor(Math.random() * matrizCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function serviceDescription(){\r",
															"\r",
															"    var serviceDescription = [\"Testes\", \"Suporte Técnico\", \"DEV\", \"TI\", \"Qualidade de Software\", \"Product Owner\", \"UI/UX\"];\r",
															"    var randomItem = serviceDescription[Math.floor(Math.random() * serviceDescription.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cityCompany(){\r",
															"\r",
															"    var cityCompany = [\"Manaus\", \"Belém\", \"Salvador\", \"Recife\", \"Fortaleza\", \"Brasília\", \"Goiânia\", \"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"João Pessoa\", \"Curitiba\", \"Porto Alegre\"];\r",
															"    var randomItem = cityCompany[Math.floor(Math.random() * cityCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function estadoCompany(){\r",
															"\r",
															"    var estadoCompany = [\"MA\", \"DF\", \"ES\", \"RO\", \"SP\", \"GO\", \"MT\", \"MS\", \"RJ\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SE\", \"TO\"];\r",
															"    var randomItem = estadoCompany[Math.floor(Math.random() * estadoCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function bairroCompany(){\r",
															"\r",
															"    var bairroCompany = [\"Jardins\", \"Moema\", \"Pinheiros\", \"Vila Madalena\", \"Copacabana\", \"Ipanema\", \"Leblon\", \"Lapa\", \"Savassi\", \"Lourdes\", \"Pelourinho\", \"Santa Tereza\", \"Barra\", \"Ondina\", \"Meireles\", \"Pici\", \"Aldeota\", \"Varjota\", \"Boa Viagem\", \"Planalto do Pici\"];\r",
															"    var randomItem = bairroCompany[Math.floor(Math.random() * bairroCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function avenida_rua(){\r",
															"\r",
															"    var avenida_rua = ['Travessa', 'Avenida', 'Rua', 'Conjunto', 'Distrito'];\r",
															"    var randomItem = avenida_rua[Math.floor(Math.random() * avenida_rua.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function nome_endereço(){\r",
															"\r",
															"    var nome_endereço = ['Solimões', 'Capiaba', 'Lineu Machado', 'Washington', 'Tenente', 'Sargento', 'Coronel', 'Jardim', 'Dois', 'Parque', 'José', 'Três', 'Dinamarca', 'França', 'Matos'];\r",
															"    var randomItem = nome_endereço[Math.floor(Math.random() * nome_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function cont_endereço(){\r",
															"\r",
															"    var cont_endereço = ['Sul', 'Costa', 'Soares', 'Irmãos', 'Marias', 'Sol', 'Carlos', 'Guimarães', 'Dourado', 'Cocó', 'Flores', 'Matos', 'I', 'II', 'Pernambuco'];\r",
															"    var randomItem = cont_endereço[Math.floor(Math.random() * cont_endereço.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															" pm.environment.set(\"serviceDescription\", serviceDescription());\r",
															" pm.environment.set(\"matrizCompany\", matrizCompany());\r",
															" pm.environment.set(\"cityCompany\", cityCompany());\r",
															" pm.environment.set(\"estadoCompany\", estadoCompany());\r",
															" pm.environment.set(\"bairroCompany\", bairroCompany());\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());\r",
															" pm.environment.set(\"endereço\", avenida_rua() +\" \"+ nome_endereço() +\" \"+ cont_endereço());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"{{matrizCompany}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"aC@4#536\",\r\n      \"city\": \"{{cityCompany}}\",\r\n      \"state\": \"{{estadoCompany}}\",\r\n      \"district\": \"{{bairroCompany}}\",\r\n      \"street\": \"{{endereço}}\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Zipcode com 8 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Obtém o valor do campo \"CEP\" do corpo da resposta\r",
															"var zipcode = responseBody.newCompany.address[0].zipCode;\r",
															"\r",
															"// Define o limite máximo de caracteres permitidos (8, conforme o exemplo)\r",
															"var maxCharacterLimit = 8;\r",
															"\r",
															"// Adiciona um teste para verificar se o campo \"CEP\" não ultrapassa o limite de caracteres\r",
															"pm.test(\"Verifica se o campo 'CEP' não ultrapassa o limite de caracteres\", function() {\r",
															"    pm.expect(zipcode.length).to.be.at.most(maxCharacterLimit);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"console.log(numeroGerado);\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"12345678\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Zipcode com mais de 8 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"\r",
															"    // Se o array contiver pelo menos um item, verifica se o primeiro item é a mensagem esperada\r",
															"    if (responseBody.error && responseBody.error.length > 0) {\r",
															"        pm.expect(responseBody.error[0]).to.equal(\"O campo 'CEP' deve conter 8 dígitos\");\r",
															"    } else {\r",
															"        // Se o array está vazio, ou 'error' não está presente, o teste falha\r",
															"        pm.expect.fail(\"Array 'error' está vazio ou não encontrado na resposta.\");\r",
															"    }\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"console.log(numeroGerado);\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567890\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Zipcode com mais de 8 caracteres (Validação de mensagem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"console.log(numeroGerado);\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567890\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Zipcode com 7 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"console.log(numeroGerado);\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Zipcode com caracteres especiais",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"console.log(numeroGerado);\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"@#448536\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Zipcode com caracteres especiais (Validação de mensagem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"function telephone() {\r",
															"  // Códigos de operadoras no Brasil\r",
															"  const operadoras = ['11', '21', '31', '41', '51'];\r",
															"\r",
															"  // Escolher aleatoriamente uma operadora\r",
															"  const operadora = operadoras[Math.floor(Math.random() * operadoras.length)];\r",
															"\r",
															"  // Gerar os 8 dígitos restantes do número\r",
															"  const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000;\r",
															"\r",
															"  // Formatar o número\r",
															"  const numeroCelular = `9${operadora}${parteNumerica}`;\r",
															"\r",
															"  // Garantir que o número tenha no mínimo 13 e no máximo 15 caracteres\r",
															"  const numeroFormatado = numeroCelular.slice(0, 15).padEnd(13, '0');\r",
															"\r",
															"  return numeroFormatado;\r",
															"}\r",
															"\r",
															"// Exemplo de uso\r",
															"const numeroGerado = telephone();\r",
															"console.log(numeroGerado);\r",
															"\r",
															"\r",
															" pm.environment.set(\"telephone\", telephone());\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \"+ lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \"+ sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set(\"registerCompany\", registerCompany())"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"@#448536\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Street (Logradouro)/District (Bairro)",
									"item": [
										{
											"name": "Company Register District é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'bairro' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District é obrigatório (Validação de mensagem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District com 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Obtém o valor do campo \"CEP\" do corpo da resposta\r",
															"var district = responseBody.newCompany.address[0].district;\r",
															"\r",
															"// Define o limite máximo de caracteres permitidos (8, conforme o exemplo)\r",
															"var maxCharacterLimit = 50;\r",
															"\r",
															"// Adiciona um teste para verificar se o campo \"CEP\" não ultrapassa o limite de caracteres\r",
															"pm.test(\"Verifica se o campo 'bairro' não ultrapassa o limite de caracteres\", function() {\r",
															"    pm.expect(district.length).to.be.at.most(maxCharacterLimit);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida Interlagos Goes 35 de Março Washington Soa\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District com 49 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Obtém o valor do campo \"CEP\" do corpo da resposta\r",
															"var district = responseBody.newCompany.address[0].district;\r",
															"\r",
															"// Define o limite máximo de caracteres permitidos (8, conforme o exemplo)\r",
															"var maxCharacterLimit = 50;\r",
															"\r",
															"// Adiciona um teste para verificar se o campo \"CEP\" não ultrapassa o limite de caracteres\r",
															"pm.test(\"Verifica se o campo 'bairro' não ultrapassa o limite de caracteres\", function() {\r",
															"    pm.expect(district.length).to.be.at.most(maxCharacterLimit);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida Interlagos Goes 35 de Março Washington So\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District com mais de 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"\r",
															"    // Se o array contiver pelo menos um item, verifica se o primeiro item é a mensagem esperada\r",
															"    if (responseBody.error && responseBody.error.length > 0) {\r",
															"        pm.expect(responseBody.error[0]).to.equal(\"O campo 'bairro' deve possuir no máximo 50 caracteres.\");\r",
															"    } else {\r",
															"        // Se o array está vazio, ou 'error' não está presente, o teste falha\r",
															"        pm.expect.fail(\"Array 'error' está vazio ou não encontrado na resposta.\");\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida Interlagos Goes 35 de Março Washington Soares Hipólito\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District com mais de 50 caracteres (Validação de mensagem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida Interlagos Goes 35 de Março Washington Soares Hipólito\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'logradouro' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) é obrigatório (Validação de mensagem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) alfanumerico",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos 17\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) com 49 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos Goes 35 de Março Washington So\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) com 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos Goes 35 de Março Washington Soa\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) com mais de 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos Goes 35 de Março Washington Soares Hipólito\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) com mais de 50 caracteres (Validação de mensagem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos Goes 35 de Março Washington Soares Hipólito\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) com caracteres especiais diferente",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interl@gos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) com caractere especial especifico",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos - Altos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) com caracteres especiais diferente (Validação de mensagem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interl@gos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) com letras minúsculas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"avenida interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Street (Logradouro) apenas números (registra com sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"45\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District alfanumerico",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores 12\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District com letras minúsculas (registra com sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"rua das flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District incompleto (registra com sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"A\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District apenas números (registra com sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"528\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District com caracteres especiais diferentes",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores - @ltos\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District com caracteres especiais específicos",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores - 1º piso\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register District com caracteres especiais diferentes (Validação de mensagem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Ru@ das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "City/State",
									"item": [
										{
											"name": "Company Register City é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'cidade' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register City com números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo 1\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register City com 49 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"Brasilia Fortaleza Maringá Porto Alegre João Pess\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register City com mais de 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"Brasilia Fortaleza Maringá Porto Alegre João Pessoa\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register City com caracteres especiais diferentes",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São P@ulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register City com caracteres especiais especifico",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo - SP\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register City com letras minúsculas (registra com sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"são paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register City diferente do State (registra com sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"RJ\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register State é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'estado' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register State apenas letras",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"S!\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register State com mais de 2 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SPS\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register State com letras minúsculas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"sp\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register State com caracteres especiais",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"S@\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Country/Number/Complement",
									"item": [
										{
											"name": "Company Register Number é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo 'número' é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Number com letras",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"Aa\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Number com 10 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"1234567891\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Number com mais de 10 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"123456789113\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Number com caracteres especiais diferente",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50$\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Number com caracteres especiais \"/\"",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50/\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Complement não é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Complement com números e letras",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Altos 123\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Complement com caracter diferente",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Altos/ 123\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Complement com caracter especifico",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Altos - 123º\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Number com caracter especial \"/\"",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50/\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Complement com 80 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Lar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Complement com mais de 80 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Country é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Fixed ReferenceError: m is not defined\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.error).to.be.an('array');\r",
															"    pm.expect(responseBody.error).to.include(\"O campo País é obrigatório.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Country com números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil 15\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Country com letra minúscula",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Country apenas letras maiusculas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"BRASIL\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Country com caracteres especiais e números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil 12 @#\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Country com 49 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil Ucrânia Bosnia Checkoslovaquia Uzbequistão\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Country com 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil Ucrânia Bozsnia Checkoslovaquia Uzbequistão\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Company Register Country com mais de 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mailCompany}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil Ucrânia Bosnia Checkoslovaquia Uzbequistão França\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Update Company",
					"item": [
						{
							"name": "Company",
							"item": [
								{
									"name": "CorporateName",
									"item": [
										{
											"name": "Update CorporateName em branco (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CorporateName é alfanumerico",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste 21 de Nome\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CorporateName com caracteres especiais",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste 21 de Nome &mpres@\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CorporateName com duplicidade",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 4\",\r\n  \"registerCompany\": \"25813321413868\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CorporateName com duplicidade Copy",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 4\",\r\n  \"registerCompany\": \"12345543211235\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CorporateName com letras maiúsculas",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"TESTE DO TESTE\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CorporateName com letras minúsculas",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"teste\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id CorporateName com 99 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id CorporateName com 100 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 10\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id CorporateName com 101 caracteres (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 101\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "RegisterCompany (CNPJ)",
									"item": [
										{
											"name": "Update registerCompany é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 900ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
															"});\r",
															"\r",
															"// Extrai o corpo da resposta da solicitação\r",
															"var responseBody = pm.response.json();\r",
															"\r",
															"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
															"pm.test(\"Valida mensagem de erro\", function() {\r",
															"    pm.expect(responseBody.alert).to.be.an('array');\r",
															"    pm.expect(responseBody.alert).to.include(\"Essa companhia não existe em nossa base de dados.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id registerCompany com 13 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"1212645600015\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id registerCompany com caracteres especiais",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"1@#$645600015\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id registerCompany com caracteres letras",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"1Abc@45600015\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id registerCompany com duplicidade",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"52473266886108\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id registerCompany com 15 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"121264560001557\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ResponsibleContact",
									"item": [
										{
											"name": "Update Company Id responsibleContact com 100 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa Silva Santos Ol\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id responsibleContact apenas nome (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Maria\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id responsibleContact apenas inicial (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"M\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id responsibleContact com letra minúscula (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"maria\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id responsibleContact com 101 caracteres (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa Silva Santos Ole\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id responsibleContact com 99 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa Silva Santos O\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update ResponsibleContact em branco (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update ResponsibleContact com números (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Maria Braga 15\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update ResponsibleContact com números e caracteres especiais",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Maria Br@ga 15\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update ResponsibleContact com caracter especial (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"M@ria F&ijó\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "MailCompany",
									"item": [
										{
											"name": "Update Mail em branco (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Mail sem o @ (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"testtest.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Mail sem o .com (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Mail com caracter especial (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"t&st@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Mail sem o domínio (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Telephone",
									"item": [
										{
											"name": "Update Telephone em branco (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Telephone com letras (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999acb999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id telephone com menos de 15 caracteres (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id telephone com 14 caracteres (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"56847999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id telephone com 13 caracteres (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"5684799999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id telephone com 12 caracteres (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"568479999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Telephone com caracteres especiais (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"@#999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id telephone com mais de 15 caracteres (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"121264560001552\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"999999999999900\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Id telephone com mais de 20 caracteres (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"999999999999900123654\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Matriz (Razão Social)/ServiceDescrption",
									"item": [
										{
											"name": "Update Matriz em branco (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Matriz (Razão Social) com 99 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 1\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Matriz (Razão Social) com 100 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 10\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Matriz (Razão Social) com 101 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Tech Global Innovative Creative Dynamic Eco Smart Alpha Synergetic 12 Fix International Discovery 101\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update serviceDescription em branco (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update serviceDescription com números (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Teste 45\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update serviceDescription com caracteres especiais (atualiza com sucesso)",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Test&$\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update serviceDescription é alfanumerico",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Test&$ 1234\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Matriz com números",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste 13\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Matriz é alfanumerico",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Testes 12345\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Matriz com duplicidade",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 2\",\r\n  \"registerCompany\": \"23426456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Test&$\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update serviceDescription é alfanumerico",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"Teste do Teste 1\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Test&$ 1234 /-\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Address",
							"item": [
								{
									"name": "Zipcode",
									"item": [
										{
											"name": "Update Company Zipcode em branco",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Zipcode com letras",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"123456ab\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Zipcode com caracteres especiais",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"123456#$\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Zipcode com caracteres especiais e letras",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234Ac#$\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Zipcode com 7 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Zipcode com mais de 8 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"123456789\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Street (Logradouro)/District (Bairro)",
									"item": [
										{
											"name": "Update Company District em branco",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company District com 50 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida Interlagos Goes 35 de Março Washington Soa\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company District com 49 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida Interlagos Goes 35 de Março Washington Soa\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company District com mais de 50 caracteres",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida Interlagos Goes 35 de Março Washington Soares Hipólito\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company District  com números",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida Interlagos 67\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company District apenas números",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"1582\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company District com letras minúsculas",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"avenida b\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company District com caracteres especiais diferentes",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"@venida b&\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company District com caracteres especiais especificos",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Avenida 14 - 1ª Via\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) com números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos 1\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) com 49 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos Goes 35 de Março Washington So\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) com 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos Goes 35 de Março Washington Soa\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) com mais de 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos Goes 35 de Março Washington Soares Hipólito\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) com caracteres especiais diferente",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interl@gos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) com caracteres especiais especifico",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida 14 - 1ª Via\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) com letras minúsculas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"avenida interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Street (Logradouro) apenas números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"45\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "City/State",
									"item": [
										{
											"name": "Update Company City é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company City com números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo 1\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company City com caracteres especiais diferentes",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São P@ulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company City com caracteres especiais especificos",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo - Avenida A - Bª Via\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company City com letras",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company City máximo de 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo Rio de Janeiro Fortaleza Salvador Maringá João Pessoa\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company City diferente do State",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"RJ\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company State é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company State com números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"S1\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company State com mais de 2 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SPS\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company State com letras minúsculas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"sp\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company State com caracteres especiais",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"S@\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Country/Number/Complement",
									"item": [
										{
											"name": "Update Company Number é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Number com letras",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50A\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Number com 10 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"1234567891\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Number com mais de 10 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"123456789113\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Number com caracteres especiais diferente",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50$\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Complement não é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Complement caracteres especiais especificos",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Casa Alta - Perto da escola 1º espaço\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Complement caracteres especiais diferentes",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Casa Alta - P&rto da escola 1º esp@ço\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Number com caracter especial \"/\"",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50/\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Complement com 80 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Lar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Complement com mais de 80 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"Maria João Ana Pedro Carla Lucas Mariana Paulo Camila Rafael Juliana Gustavo Larissa\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Country é obrigatório",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Country com números",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil 15\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Country com caracteres especiais",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil @#\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Country com 49 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil Ucrânia Bosnia Checkoslovaquia Uzbequistão\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Country com 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil Ucrânia Bozsnia Checkoslovaquia Uzbequistão\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Company Country com mais de 50 caracteres",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  const rnd = (n) => Math.round(Math.random() * n);\r",
															"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
															"  const n = Array(12).fill('').map(() => rnd(9)); // Change the array length to 12\r",
															"\r",
															"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
															"  d1 = 11 - mod(d1, 11);\r",
															"  if (d1 >= 10) d1 = 0;\r",
															"\r",
															"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
															"  d2 = 11 - mod(d2, 11);\r",
															"  if (d2 >= 10) d2 = 0;\r",
															"\r",
															"  return `${n.join('')}${d1}${d2}`\r",
															"}\r",
															"\r",
															"function prefixes(){\r",
															"\r",
															"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop'];\r",
															"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function sufixes(){\r",
															"\r",
															"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Dynamics', 'Pay', '212', 'Tech', 'Dynamics'];\r",
															"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function firstName(){\r",
															"\r",
															"    var firstName = [\"Miguel\",\"Sophia\",\"Davi\",\"Alice\",\"Arthur\",\"Julia\",\"Pedro\",\"Isabella\",\"Gabriel\",\"Manuela\",\"Bernardo\",\"Laura\",\"Lucas\",\"Flávia\",\"Luiza\",\"Matheus\",\"Noah\",\"Valentina\",\"Rafael\",\"Giovanna\",\"Heitor\",\"Enzo\",\"Helena\",\"Guilherme\",\"Beatriz\",\"Nicolas\",\"Letícia\",\"Lorenzo\",\"Lara\",\"Gustavo\",\"Mariana\",\"Felipe\",\"Nicole\",\"Samuel\",\"Joice\",\"Dener\",\"Rafaela\",\"Augusto\",\"Heloísa\",\"Daniel\",\"Isadora\",\"Vitor\",\"Lívia\",\"Leonardo\",\"Henrique\",\"Juliana\",\"Theo\",\"Lorena\",\"Murilo\",\"Gabriela\",\"Eduardo\",\"Yasmin\",\"Pedro\",\"Henriqueta\",\"Isabelly\",\"Pietro\",\"Sarah\",\"Kauã\",\"Jaqueline\",\"Isaac\",\"Letícia\",\"Caio\",\"Mariele\",\"Vinícius\",\"Melissa\",\"Benjamin\",\"Marina\",\"João\",\"Clara\",\"Lucca\",\"Cecília\",\"Miguel\",\"Esther\",\"Bryan\",\"Emanuelly\",\"Joaquim\",\"Rebeca\",\"Victor\",\"Bella\",\"Thiago\",\"Lavínia\",\"Antônio\",\"Vitória\",\"Mario\",\"Bianca\",\"Francisco\",\"Catarina\",\"Ronaldo\",\"Larissa\",\"Bruno\",\"Margarida\",\"Emanuel\",\"Fernanda\",\"Marcos\",\"Amanda\",\"Ian\",\"Alícia\",\"Luiz\",\"Carolina\",\"Rodrigo\",\"Agatha\",\"Otávio\",\"Gabrielly\",\"Elizabeth\",\"Tauana\",\"Maria\",\"Antônia\",\"Teresa\",\"Lira\",\"Igor\",\"Eduarda\",\"Henrique\",\"Vinícius\",\"Sidney\",\"Adriano\",\"Maryanne\",\"William\",\"Liza\",\"Francisca\"];\r",
															"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function lastName(){\r",
															"\r",
															"    var lastName = [\"Silva\",\"Santos\",\"Oliveira\",\"Souza\",\"Rodrigues\",\"Almeida\",\"Costa\",\"Pereira\",\"Carvalho\",\"Ferreira\",\"Gomes\",\"Martins\",\"Rocha\",\"Ribeiro\",\"Alves\",\"Lima\",\"Sousa\",\"Fernandes\",\"Pinto\",\"Cunha\",\"Mendes\",\"Barbosa\",\"Saraiva\",\"Machado\",\"Cardoso\",\"Nogueira\",\"Ramos\",\"Coelho\",\"Araújo\",\"Castro\",\"Fonseca\",\"Rocha\",\"Moreira\",\"Figueiredo\",\"Gonçalves\",\"Monteiro\",\"Marques\",\"Peixoto\",\"Morais\",\"Lopes\",\"Vieira\",\"Tavares\",\"Correia\",\"Neves\",\"Nunes\",\"Cavalcanti\",\"Andrade\",\"Freitas\",\"Coutinho\",\"Rezende\",\"Macedo\",\"Borges\",\"Barros\",\"Melo\",\"Barbosa\",\"Campos\",\"Lemos\",\"Braga\",\"Teixeira\",\"Dias\",\"Albuquerque\",\"Sampaio\",\"Moura\",\"Rocha\",\"Silveira\",\"Aguiar\",\"Abreu\",\"Lima\",\"Pacheco\",\"Vargas\",\"Farias\",\"Moraes\",\"Ferreira\",\"Gusmão\",\"Sousa\",\"Azevedo\",\"Dantas\",\"Cavalcante\",\"Batista\",\"Peixoto\",\"Pires\",\"Leite\",\"Ramos\",\"Macedo\",\"Sales\",\"Carneiro\",\"Monteiro\",\"Goulart\",\"Cruz\",\"Fialho\",\"Xavier\",\"Prado\",\"Valente\",\"Furtado\",\"Vieira\",\"Cordeiro\",\"Rêgo\",\"Reis\",\"Alves da Silva\",\"Andrade Barbosa\",\"Barbosa Oliveira\",\"Oliveira da Silva\",\"Alves Pereira\",\"Conceição Barbosa\",\"Allen Young\",\"Hernandez King\",\"Wright Lopez\",\"Hill Scott\",\"Green Adams\",\"Conceição da Costa\",\"da Costa Oliveira\",\"Rodrigues de Oliveira\",\"Amaral Neto de Souza\",\"Pereira da Conceição\",\"Barros Neto de Andrade\",\"Borges de Andrade Pereira da Silva\",\"Batista Campos do Amaral\",\"Cardoso de Oliveira\",\"Pontes Guimarães\",\"Dias de Jesus\",\"Barbosa de Lima\",\"Gonçalves da Silva\",\"Gonçalves de Lima\",\"Pereira de Oliveira Batista\",\"Dias de Freitas\",\"Ferreira\",\"Garcia da Paixão\",\"Lima Lopes\",\"Jesus da Silva\",\"da Silva de Lima\",\"da Silva Gonçalves Texeira\",\"Fernandes de Paula\",\"da Paula da Silva\",\"Barbosa de Mello Oliveira\",\"Oliveira Neto Conceição da Paixão\"];\r",
															"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function domainCompany(){\r",
															"\r",
															"    var domainCompany = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com\",\"@outlook.com\",\"@aol.com\",\"@icloud.com\",\"@protonmail.com\",\"@gmx.com\",\"@mail.com\",\"@zoho.com\",\"@yandex.com\",\"@live.com\",\"@rocketmail.com\",\"@fastmail.com\",\"@tutanota.com\",\"@inbox.com\",\"@me.com\",\"@rediffmail.com\",\"@sbcglobal.net\",\"@cox.net\",\"@yahoo.co.uk\",\"@att.net\",\"@mail.ru\",\"@optonline.net\",\"@ymail.com\",\"@outlook.com.br\",\"@live.com.mx\",\"@gmx.de\",\"@web.de\",\"@yahoo.com.br\",\"@yandex.ru\",\"@hotmail.fr\",\"@hotmail.co.uk\",\"@yahoo.fr\",\"@outlook.es\",\"@mail.ru\",\"@orange.fr\",\"@libero.it\",\"@hotmail.it\",\"@yahoo.it\",\"@o2.pl\",\"@wp.pl\",\"@interia.pl\",\"@onet.pl\",\"@seznam.cz\",\"@abv.bg\",\"@gmx.at\",\"@gmx.ch\",\"@bluewin.ch\",\"@inbox.lv\",\"@rambler.ru\",\"@mail.bg\",\"@yahoo.ca\",\"@hotmail.ca\",\"@bell.net\",\"@hotmail.com.au\",\"@yahoo.com.au\",\"@t-online.de\",\"@arcor.de\",\"@cox.net\",\"@verizon.net\",\"@yahoo.de\",\"@hotmail.de\",\"@wanadoo.fr\",\"@live.fr\",\"@gmx.fr\",\"@mail.be\",\"@telenet.be\",\"@hotmail.be\",\"@yahoo.co.in\",\"@live.in\",\"@rediffmail.com\",\"@hotmail.in\",\"@indiatimes.com\",\"@yahoo.co.id\",\"@hotmail.co.id\",\"@yahoo.com.sg\",\"@outlook.sg\",\"@hotmail.com.sg\",\"@yahoo.com.ph\",\"@yahoo.com.vn\",\"@yahoo.com.ar\",\"@yahoo.com.mx\",\"@yahoo.com.co\",\"@yahoo.com.pe\",\"@yahoo.com.ve\",\"@yahoo.com.ec\",\"@yahoo.com.bo\",\"@yahoo.com.gt\",\"@yahoo.com.do\",\"@yahoo.com.pa\",\"@yahoo.com.hk\",\"@yahoo.com.tw\",\"@yahoo.com.cn\",\"@yahoo.co.jp\",\"@yahoo.co.kr\",\"@yahoo.co.th\",\"@yahoo.com.my\",\"@yahoo.com.sa\",\"@yahoo.ae\",\"@yahoo.co.il\",\"@yahoo.com.tr\",\"@yahoo.com.eg\",\"@yahoo.com.ng\",\"@yahoo.co.za\",\"@yahoo.com.au\",\"@yahoo.com.nz\",\"@yahoo.com.ph\",\"@yahoo.com.vn\"];\r",
															"    var randomItem = domainCompany[Math.floor(Math.random() * domainCompany.length)];\r",
															"\r",
															"    return randomItem;\r",
															"}\r",
															"\r",
															"function mailCompany(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g, \"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r",
															"    var mailCompany = user+pm.variables.get(\"DomainCompany\");\r",
															"    return mailCompany;\r",
															"}\r",
															"\r",
															"\r",
															" pm.environment.set(\"ResponsibleContact\", firstName() +\" \" + lastName());\r",
															" pm.environment.set(\"CorporateName\", prefixes() +\" \" + sufixes());\r",
															" pm.environment.set(\"DomainCompany\", domainCompany());\r",
															" pm.environment.set(\"mailCompany\", mailCompany());\r",
															" pm.environment.set('registerCompany', registerCompany());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{tokenUserMari}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "token",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil Ucrânia Bosnia Checkoslovaquia Uzbequistão França\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Url}}/api/company/address/{{idCompany1}}",
													"host": [
														"{{Url}}"
													],
													"path": [
														"api",
														"company",
														"address",
														"{{idCompany1}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Delete Company",
					"item": []
				}
			]
		},
		{
			"name": "Diretoria (Board) - Caminho Feliz",
			"item": [
				{
					"name": "Register Board (Diretoria)",
					"item": [
						{
							"name": "Register Board (Diretoria)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function boardPrefixes(){\r",
											"\r",
											"    var boardPrefixes = [\"Coordenação\", \"Auditoria\", \"Testes\", \"Automação\", \"Suporte\", \"Robótica\", \"Financeiro\", \"TI\", \"RH\", \"Qualidade\", \"Desenvolvimento\", \"Recursos\", \"Tech\", \"Tesouraria\"];\r",
											"    var randomItem = boardPrefixes[Math.floor(Math.random() * boardPrefixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function boardSufixes(){\r",
											"\r",
											"var boardSufixes = [\"A\", \"a\", \"b\", \"B\", \"c\", \"C\", \"d\", \"D\", \"E\", \"e\", \"F\", \"f\", \"G\", \"g\", \"H\", \"h\", \"I\", \"i\", \"J\", \"j\", \"K\", \"k\", \"L\", \"l\", \"M\", \"m\", \"N\", \"n\", \"O\", \"o\", \"P\", \"p\", \"Q\", \"q\", \"R\", \"r\", \"S\", \"s\", \"T\", \"t\", \"U\", \"u\", \"V\", \"v\", \"X\", \"x\", \"W\", \"w\", \"Y\", \"y\", \"Z\", \"z\"];\r",
											"    var randomItem = boardSufixes[Math.floor(Math.random() * boardSufixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"boardName\", boardPrefixes() +\" \"+ boardSufixes ());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Obtém o ID diretamente do corpo de resposta\r",
											"var boardId = pm.response.json().newBoard._id;\r",
											"\r",
											"// Define a variável de ambiente com o ID\r",
											"pm.environment.set(\"idDiretoria\", boardId);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{boardName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Board (Diretoria)",
					"item": [
						{
							"name": "Update Board (Diretoria) ID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Financeiro\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List/Count/ID",
					"item": [
						{
							"name": "List",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Count",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/board/count",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Consult ID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						},
						{
							"name": "Consult ID 2",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/board/657e207b4cfdded29f388524",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"657e207b4cfdded29f388524"
									]
								}
							},
							"response": []
						},
						{
							"name": "Consult ID 3",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Url}}/api/board/6573c9c107b4da450583b65c",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"6573c9c107b4da450583b65c"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Diretoria (Board) - Falso Positivo",
			"item": [
				{
					"name": "Register Board (Diretoria)",
					"item": [
						{
							"name": "Register Board BoardName é obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"// Extrai o corpo da resposta da solicitação\r",
											"var responseBody = pm.response.json();\r",
											"\r",
											"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
											"pm.test(\"Valida mensagem de erro\", function() {\r",
											"    pm.expect(responseBody.error).to.be.an('array');\r",
											"    pm.expect(responseBody.error).to.include(\"O campo 'diretoria' é obrigatório.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Board BoardName é obrigatório 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo 'diretoria' é obrigatório.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgBoardNameRequired\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Board BoardName com números",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo 'diretoria' só pode conter letras e o caractere especial '&'.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgBoardNameIncorrect\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações 14\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Board BoardName com letra minúscula",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function boardPrefixes(){\r",
											"\r",
											"    var boardPrefixes = [\"coordenação\", \"auditoria\", \"testes\", \"automação\", \"suporte\", \"robótica\", \"financeiro\", \"ti\", \"rh\", \"qualidade\", \"desenvolvimento\", \"recursos\", \"tech\", \"tesouraria\"];\r",
											"    var randomItem = boardPrefixes[Math.floor(Math.random() * boardPrefixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function boardSufixes(){\r",
											"\r",
											"var boardSufixes = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"x\", \"w\", \"y\", \"z\"];\r",
											"    var randomItem = boardSufixes[Math.floor(Math.random() * boardSufixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"boardName\", boardPrefixes() +\" \"+ boardSufixes ());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{boardName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Board BoardName com letra maiúscula",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function boardPrefixes(){\r",
											"\r",
											"    var boardPrefixes = [\"COORDENAÇÃO\", \"AUDITORIA\", \"TESTES\", \"AUTOMAÇÃO\", \"SUPORTE\", \"ROBÓTICA\", \"FINANCEIRO\", \"TI\", \"RH\", \"QUALIDADE\", \"DESENVOLVIMENTO\", \"RECURSOS\", \"TECH\", \"TESOURARIA\"];\r",
											"    var randomItem = boardPrefixes[Math.floor(Math.random() * boardPrefixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function boardSufixes(){\r",
											"\r",
											"var boardSufixes = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"X\", \"W\", \"Y\", \"Z\"];\r",
											"    var randomItem = boardSufixes[Math.floor(Math.random() * boardSufixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"boardName\", boardPrefixes() +\" \"+ boardSufixes ());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{boardName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Board BoardName com caracteres especiais diferentes de \"&\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Oper@ções\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Board BoardName com caracter especial \"&\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test('Check the success message', function () {\r",
											"    pm.expect('Cadastro realizado com sucesso!').to.eql(pm.response.json().msg);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function boardPrefixes(){\r",
											"\r",
											"    var boardPrefixes = [\"Coordenação &\", \"Auditoria &\", \"Testes &\", \"Automação &\", \"Suporte &\", \"Robótica &\", \"Financeiro &\", \"TI &\", \"RH &\", \"Qualidade &\", \"Desenvolvimento &\", \"Recursos &\", \"Tech &\", \"Tesouraria &\"];\r",
											"    var randomItem = boardPrefixes[Math.floor(Math.random() * boardPrefixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"function boardSufixes(){\r",
											"\r",
											"var boardSufixes = [\"A\", \"a\", \"b\", \"B\", \"c\", \"C\", \"d\", \"D\", \"E\", \"e\", \"F\", \"f\", \"G\", \"g\", \"H\", \"h\", \"I\", \"i\", \"J\", \"j\", \"K\", \"k\", \"L\", \"l\", \"M\", \"m\", \"N\", \"n\", \"O\", \"o\", \"P\", \"p\", \"Q\", \"q\", \"R\", \"r\", \"S\", \"s\", \"T\", \"t\", \"U\", \"u\", \"V\", \"v\", \"X\", \"x\", \"W\", \"w\", \"Y\", \"y\", \"Z\", \"z\"];\r",
											"    var randomItem = boardSufixes[Math.floor(Math.random() * boardSufixes.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"boardName\", boardPrefixes() +\" \"+ boardSufixes ());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{boardName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Board BoardName com mais de 50 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo 'diretoria' deve possuir no máximo 50 caracteres.\", function (){\r",
											"    pm.expect(pm.response.json().error[0]).to.eql(pm.globals.get(\"MsgBoardOver50\"));\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações Financeiro Tesouraria Marketing Geral Diretorias\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Board (Diretoria) 2 não pode ter duplicidade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"// Extrai o corpo da resposta da solicitação\r",
											"var responseBody = pm.response.json();\r",
											"\r",
											"// Mensagem de erro esperada\r",
											"var expectedErrorMessage = \"Não é possível salvar esse registro. Diretoria já cadastrada no sistema.\";\r",
											"\r",
											"// Adiciona um teste para verificar se a mensagem de erro contém a frase esperada\r",
											"pm.test(\"Verifica se a companhia já está cadastrada\", function() {\r",
											"    pm.expect(responseBody.alert).to.be.an('array');\r",
											"    pm.expect(responseBody.alert).to.include(expectedErrorMessage);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Board (Diretoria) ID",
					"item": [
						{
							"name": "Update Board BoardName é obrigatório",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 900ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
											"});\r",
											"\r",
											"// Extrai o corpo da resposta da solicitação\r",
											"var responseBody = pm.response.json();\r",
											"\r",
											"// Verifica se a resposta contém uma chave \"error\" e se a mensagem esperada está presente\r",
											"pm.test(\"Valida mensagem de erro\", function() {\r",
											"    pm.expect(responseBody.error).to.be.an('array');\r",
											"    pm.expect(responseBody.error).to.include(\"O campo 'diretoria' é obrigatório.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Board BoardName apenas letras minúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"rh\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Board BoardName apenas letras maiúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"DEV\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Board BoardName com números",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações 14\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Board BoardName com caracteres especiais diferentes de \"&\"",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Oper@ções\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Board BoardName com caractere especial \"&\"",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações & RH\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Board BoardName com mais de 50 caracteres",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações Financeiro Tesouraria Marketing Geral Diretoria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/board/656e279407b4da45056105da",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"board",
										"656e279407b4da45056105da"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Centro de custos - Caminho Feliz",
			"item": [
				{
					"name": "List",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/api/costCenter/",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"costCenter",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List costCenter ID",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/api/costCenter/657b7c184cfdded29f380cf8",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"costCenter",
								"657b7c184cfdded29f380cf8"
							]
						}
					},
					"response": []
				},
				{
					"name": "List ID Copy",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/api/costCenter/657e24f94cfdded29f38855c",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"costCenter",
								"657e24f94cfdded29f38855c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Count",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/api/costCenter/count",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"costCenter",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register costCenter sucess",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function prefixes(){\r",
									"\r",
									"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', 'fix', 'international', 'discovery', 'drop', 'alternative'];\r",
									"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
									"\r",
									"    return randomItem;\r",
									"}\r",
									"\r",
									"function sufixes(){\r",
									"\r",
									"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
									"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
									"\r",
									"    return randomItem;\r",
									"}\r",
									"\r",
									"pm.environment.set(\"costCenter\", prefixes() +\" \"+ sufixes());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var costCenterId = pm.response.json().newCostCenter._id;\r",
									"pm.environment.set(\"idCentroCusto\", costCenterId);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 900ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
									"});\r",
									"\r",
									"pm.test(\"Check is costCenterName true\", function(){\r",
									"    pm.expect(pm.environment.get(\"costCenter\")).to.eql(JSON.parse(responseBody).newCostCenter.costCenterName);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"costCenterName\": \"{{costCenter}}\",\r\n    \"boardId\": \"{{idDiretoria}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}/api/costCenter/",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"costCenter",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit costCenter sucess",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"costCenterName\": \"Movies\",\r\n  \"boardId\": \"656e279407b4da45056105da\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}/api/costCenter/657b7c184cfdded29f380cf8",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"costCenter",
								"657b7c184cfdded29f380cf8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit costCenter status sucess",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}/api/costCenter/status/6580fa2a4cfdded29f388948",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"costCenter",
								"status",
								"6580fa2a4cfdded29f388948"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Centro de custos - Falso Positivo",
			"item": [
				{
					"name": "Register",
					"item": [
						{
							"name": "costCenter é obrigatório",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"\",\r\n  \"boardId\": \"657b71584cfdded29f380b8a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "costCenter já cadastrado",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"costCenterName\": \"DeV\",\r\n    \"boardId\": \"656e279407b4da45056105da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "costCenter validar as regras",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"costCenterName\": \"DEV & financeiro\",\r\n    \"boardId\": \"656e279407b4da45056105da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "costCenter com letras maiúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"FINANCEIROS\",\r\n  \"boardId\": \"657b71584cfdded29f380b8a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "costCenter com números",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiro 1\",\r\n  \"boardId\": \"657b71584cfdded29f380b8a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "costCenter com letras minúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"financeiros\",\r\n  \"boardId\": \"657b71584cfdded29f380b8a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "costCenter com caractere especial &",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiro & Companhias\",\r\n  \"boardId\": \"657b71584cfdded29f380b8a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "costCenter com caractere especial diferente",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiro @#\",\r\n  \"boardId\": \"657b71584cfdded29f380b8a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ID diretoria é obrigatório",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiro\",\r\n  \"boardId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "costCenter máximo de 50 caracteres",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiro Desenvolvimento Qualidade Tesouraria CIA\",\r\n  \"boardId\": \"657b71584cfdded29f380b8a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update costCenter ID",
					"item": [
						{
							"name": "Edit costCenterName é obrigatório",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"\",\r\n  \"boardId\": \"64e51573d94be9062773f6da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/6580fa2a4cfdded29f388948",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										"6580fa2a4cfdded29f388948"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit costCenterName com números",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"TI 1\",\r\n  \"boardId\": \"64e51573d94be9062773f6da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/6580fa2a4cfdded29f388948",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										"6580fa2a4cfdded29f388948"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Id diretoria obrigatório",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Marketing\",\r\n  \"boardId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/6580fa2a4cfdded29f388948",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										"6580fa2a4cfdded29f388948"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit costCenter máximo de 50 caracteres",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiro Desenvolvimento Qualidade Tesouraria CIA\",\r\n  \"boardId\": \"656e279407b4da45056105da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/6580fa2a4cfdded29f388948",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										"6580fa2a4cfdded29f388948"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit costCenter com letras maiúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"FINANCEIROSS\",\r\n  \"boardId\": \"656e279407b4da45056105da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/6580fa2a4cfdded29f388948",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										"6580fa2a4cfdded29f388948"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit costCenter com letras minúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"financeiross\",\r\n  \"boardId\": \"656e279407b4da45056105da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/6580fa2a4cfdded29f388948",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										"6580fa2a4cfdded29f388948"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit costCenter com caractere especial &",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiros & Companhia\",\r\n  \"boardId\": \"656e279407b4da45056105da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/6580fa2a4cfdded29f388948",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										"6580fa2a4cfdded29f388948"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit costCenter com caractere especial diferente",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiro @#\",\r\n  \"boardId\": \"656e279407b4da45056105da\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/costCenter/6580fa2a4cfdded29f388948",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"costCenter",
										"6580fa2a4cfdded29f388948"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Departamento - Caminho Feliz",
			"item": [
				{
					"name": "Register Department sucess",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var departmentId = pm.response.json().newDepartment._id;\r",
									"pm.environment.set(\"idDepartamento\", departmentId);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 900ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function prefixes(){\r",
									"\r",
									"    var prefixes = ['Tech', 'Global', 'Innovative', 'Creative', 'Dynamic', 'Eco', 'Smart', 'Alpha', 'Synergetic', '12', 'Fix', 'International', 'Discovery', '1001', 'Creative', 'Drop', 'Alternative', 'echo', 'tech', 'global', 'innovative', 'creative', 'dynamic', 'eco', 'smart', 'alpha', 'synergetic', '212', 'fix', 'international', 'discovery', '1001', 'drop', 'alternative'];\r",
									"    var randomItem = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
									"\r",
									"    return randomItem;\r",
									"}\r",
									"\r",
									"function sufixes(){\r",
									"\r",
									"    var sufixes = ['Solutions', 'Technologies', 'Enterprises', 'Innovations', 'Labs', 'Systems', 'Consulting', 'Group', 'Digital', 'Pay', '212', 'Tech', 'Dynamics', 'TI', 'Modern'];\r",
									"    var randomItem = sufixes[Math.floor(Math.random() * sufixes.length)];\r",
									"\r",
									"    return randomItem;\r",
									"}\r",
									"\r",
									"pm.environment.set(\"Departamento\", prefixes() +\" \"+ sufixes());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"departmentName\": \"{{Departamento}}\",\r\n    \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}/api/department/",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"department",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/api/department/",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"department",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Count",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/api/department/count",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"department",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "List department ID",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/api/department/{{idDepartamento}}",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"department",
								"{{idDepartamento}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Department sucess",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"departmentName\": \"Novo Departamento SSAA\",\r\n  \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}/api/department/{{idDepartamento}}",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"department",
								"{{idDepartamento}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Department status sucess",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{tokenUserMari}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}/api/department/status/65823cb54cfdded29f38af7c",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"department",
								"status",
								"65823cb54cfdded29f38af7c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Departamento - Falso Positivo",
			"item": [
				{
					"name": "Register Department",
					"item": [
						{
							"name": "Register Department é obrigatório",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"\",\r\n    \"costCenterId\": \"657b7c184cfdded29f380cf8\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Department com números",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Departamento 12\",\r\n    \"costCenterId\": \"657b7c184cfdded29f380cf8\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register ID Centro de custo é obrigatório",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Novo Departamento A\",\r\n    \"costCenterId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Department já cadastrado",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Novo Departamento B\",\r\n    \"costCenterId\": \"657bac284cfdded29f385743\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Department com caractere especial diferente",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Novo Departamento @#\",\r\n    \"costCenterId\": \"657bac284cfdded29f385743\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Department com caractere especial &",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Financeiroa & Companhias\",\r\n    \"costCenterId\": \"657bac284cfdded29f385743\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Department com letras minúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"novos departamentos a\",\r\n    \"costCenterId\": \"657bac284cfdded29f385743\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Department com letras maiúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"FINANCEIROAA\",\r\n    \"costCenterId\": \"657bac284cfdded29f385743\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Department máximo de 50 caracteres",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Financeiro Desenvolvimento Qualidade Tesouraria CIA\",\r\n    \"costCenterId\": \"657bac284cfdded29f385743\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Department",
					"item": [
						{
							"name": "Edit DepartmentName é obrigatório",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"\",\r\n  \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/{{idDepartamento}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										"{{idDepartamento}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit DepartmentName com números",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Departamento 14\",\r\n  \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/{{idDepartamento}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										"{{idDepartamento}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Departamento Id centro de custo obrigatório",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Novo Departamento S\",\r\n  \"costCenterId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/{{idDepartamento}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										"{{idDepartamento}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Department máximo de 50 caracteres",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Financeiro Desenvolvimento Qualidade Tesouraria CIA\",\r\n  \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/{{idDepartamento}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										"{{idDepartamento}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Department letras maiúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"NOVO DEPARTAMENTO\",\r\n  \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/{{idDepartamento}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										"{{idDepartamento}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Department letras minúsculas",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"novo departamento s\",\r\n  \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/{{idDepartamento}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										"{{idDepartamento}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Department caractere especial &",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Novo Departamento & Financeiros\",\r\n  \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/{{idDepartamento}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										"{{idDepartamento}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Department caractere especial diferente",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUserMari}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Novo Departamento @%\",\r\n  \"costCenterId\": \"{{idCentroCusto}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Url}}/api/department/{{idDepartamento}}",
									"host": [
										"{{Url}}"
									],
									"path": [
										"api",
										"department",
										"{{idDepartamento}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}